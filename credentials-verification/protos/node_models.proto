syntax = "proto3";

package io.iohk.prism.protos;

message TimestampInfo {
    uint64 blockTimestamp = 1; // timestamp provided from the underlying blockchain
    uint32 blockSequenceNumber = 2; // transaction index inside the underlying blockchain block
    uint32 operationSequenceNumber = 3; // operation index inside the AtalaBlock
}

enum KeyUsage {
    // UNKNOWN_KEY is an invalid value - Protobuf uses 0 if no value is provided and we want user to explicitly choose the usage
    UNKNOWN_KEY = 0;
    MASTER_KEY = 1;
    ISSUING_KEY = 2;
    COMMUNICATION_KEY = 3;
    AUTHENTICATION_KEY = 4;
}

message ECKeyData {
    string curve = 1;
    bytes x = 2;
    bytes y = 3;
}

message PublicKey {
    string id = 1;
    KeyUsage usage = 2;
    TimestampInfo addedOn = 3;
    TimestampInfo revokedOn = 4;
    oneof keyData {
        ECKeyData ecKeyData = 8;
    };
}

message DIDData {
    string id = 1; // DID suffix, where DID is in form did:atala:[DID suffix]
    repeated PublicKey publicKeys = 2;
}

message CredentialData {
    string id = 1;
    string issuer = 2;
    bytes contentHash = 3;
}

message CreateDIDOperation {
    DIDData didData = 1; // DIDData with did empty id field
}

message AddKeyAction {
    PublicKey key = 1;
}

message RemoveKeyAction {
    string keyId = 1;
}

message UpdateDIDAction {
    oneof action {
        AddKeyAction addKey = 1;
        RemoveKeyAction removeKey = 2;
    }
}

message UpdateDIDOperation {
    bytes previousOperationHash = 1;
    string id = 2;
    repeated UpdateDIDAction actions = 3;
}

message IssueCredentialOperation {
    CredentialData credentialData = 1; // credential data with id empty
}

message RevokeCredentialOperation {
    bytes previousOperationHash = 1;
    string credentialId = 2; // revoked credential id, as returned in IssueCredentialResponse
}

message AtalaOperation {
    oneof operation {
        CreateDIDOperation createDid = 1;
        UpdateDIDOperation updateDid = 2;
        IssueCredentialOperation issueCredential = 3;
        RevokeCredentialOperation revokeCredential = 4;
    };
}

message SignedAtalaOperation {
    string signedWith = 1; // id of key used to sign
    bytes signature = 2; // signature of byte encoding of the operation
    AtalaOperation operation = 3;
}
