syntax = "proto3";

/*
Based on requirements, diplomas need the following information

Universities
- Full name of the institution (Legal form with reference)
- Name of the qualifying / academic authority
- Decision on granting qualification / academic degree
- Issue Number
- Issue Date (day, month, year)
- Name and Surname of Graduate
- Qualified / academic degree awarded
- Additional specialty (if any)
- Name and surname of the head of the institution (Signature)
- Name and surname of persons / persons authorized to sign a diploma (Signature)

Given an example diploma we found a few extra fields present
- Registration number
- Decision number

Notoriously we see that national id number or other graduate date is not
required, only the name is.
We decided to add a HolderData field with optional extra values for this.

In the case of schools, required information is:
- Name and surname School student
- Student's personal number (if any)
- Students Date of Birth
- Full legal name of Education institution
- Year completed by Student

We see that no signature is mentioned for the school diplomas

Given the schema bellow both types of certificates can be encoded, the distinction will be found
in IssuerData, where the IssuerType differentiate schools and universities
*/

message Credential {
    IssuerData issuerType = 1; // Data associated to the issuer organization. Currently University or School
    HolderData holderData = 2; // Personal data associated to the holder (student)
    repeated Signer signingAuthorities = 3; // head and other members of the institution that will sign the diploma
    string degreeAwarded = 4; // Degree name
    string additionalSpeciality = 5; // Optional additional speciality
    Date issuedOn = 7; // Date of issuance

    // Fields that are unclear. They may be updated or even deleted
    string issueNumber = 6; // NEED CLARIFICATION ON WHAT THIS IS
    string academicAuthority = 8; // NEED CLARIFICATION Name of the qualifying / academic authority. How this differ from the institution legal name?
    string grantingDecission = 9; // NEED CLARIFICATION Decision on granting qualification / academic degree
    string registrationNumber = 10; // NEED CLARIFICATION Registration number. This appears in the example diploma but it is unclear how this may relate to "Issue number"
    string decisionNumber = 11; //NEED CLARIFICATION Decision number. This appears in the example diploma but it is unclear how this may relate to "Issue number"
    string yearCompletedByStudent = 15; // WE NEED CLARIFICATIONS ON THIS FIELD. It is related to school diplomas
                                        // It may be replaceable by one of the fields related to OpenCerts. See below

    // Fields inspired from OpenCerts standard. See: https://github.com/OpenCerts/open-certificate/blob/master/schema/2.0/schema.json
    string description = 16; // Field reserved for general description of the credential
    Date expiresOn = 17;
    Date admissionDate = 18; // unclear meaning
    Date graduationDate = 19 ; // (OpenCerts description) The date that this student graduated from the course
    Date attainmentDate = 20 ; // (OpenCerts description) The date that this qualification was awarded to the recipient
    // Other fields we could add:
    /*
    qualificationLevel: (OpenCerts description) "This is an array of objects used to attach descriptors from
                         frameworks such as Singapore's SSEC-EQA or the internationally recognised ISCED. Multiple
                         instances are allowed to indicate either equivalents or to indicate a multi-level qualifications",
                         It consist of tuples of 4 strings
     fieldOfStudy: (OpenCerts description) "This is an array of objects used to attach descriptors from frameworks such
                   as Singapore's SSEC-FOS or the internationally recognised ISCED-F. Multiple instances are allowed to
                   indicate either equivalents or to indicate a multi-field qualification such as double degrees",
                   It consist of tuples of 4 strings
    cumulativeScore: Unclear description, it is a number. Probably applies to course certificates but not to degrees.
    transcript: It seems to consist of an array of data associated to each course that the student took to get the degree.
    additionalData: Unclear field without structure (a simple JSON object). It may be used to add extra data.
    */
}

message IssuerData {
    string issuerLegalName = 1; // Issuer legal name
    IssuerType issuerType = 2; // Issuer organization type. Currently University or School
    string did = 3; // public DID associated to the institution
    // OpenCerts adds some other data like URL, email, phone
}

message Signer {
    repeated string names = 1;
    repeated string surnames = 2;
    string role = 3; // Rector, Dean, etc.
    string did = 4; // public DID associated to the signer
    string tittle = 15; // Tittle to address the person. e.g. Mr, Dr, Prof, etc.
}

// For now Universites and schools.
enum IssuerType {
    University = 0;
    School = 1;
}

message HolderData {
    repeated string names = 1; // Names of the holder
    repeated string surname = 2; // surnames of the holder
    Date dateOfBirth = 3; // date of birth of the holder
    PersonalId idDocument = 4; // optional identification number of the holder
    // OpenCerts also adds phone, email, URL, studentId and unclear values "nric" and "fin".
}

message Date {
    int32 year = 1; // positive value
    int32 month = 2; // value in the [1, 12] interval
    int32 day = 3; // value in the [1, 31] interval (depending on the month, the max value might be 28
}

message PersonalId {
    string id = 1; // unique identifier of the individual according to document type
    IdDocumentType documentType = 2; // E.g. passport, driver licence, national card
}

enum IdDocumentType {
    NationalIdCard = 0;
    Passport = 1;
}
