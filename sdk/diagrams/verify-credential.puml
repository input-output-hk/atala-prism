@startuml
(*) --> "SDK Verify Credential"
"SDK Verify Credential" --> "MerkleInclusionProof" #LightSkyBlue
"SDK Verify Credential" --> "signedCredentialStringRepresentation" #LightSkyBlue
if "Parse Credential Payload" then
    signedCredentialStringRepresentation -->[UnableToParseGivenSignedCredential] "ValidationResult"
else
    -->[success] "Credential" #Orange
    "Credential" --> if "Extract IssuanceKeyId from Credential Payload" then
        -->[IssuerKeyIdNotFoundInCredential] "ValidationResult"
    else
        -->[success] if "Node.getDidDocument" then
            -->[IssuerDIDNotFoundOnChain] "ValidationResult"
        else
            -->[success] if "Extract IssuanceKeyId detail from Issuer DidDocument" then
                -->[IssuerKeyIdNotFoundOnChain] "ValidationResult"
            else
                -->[success] === q ===
                === q === --> if "Parse IssuingKey from IssuanceKeyId detail" then
                    -->[OnChainIssuingKeyUnparsable] "ValidationResult"
                else
                    -->[success] "IssuingKey" #Orange
                === q === --> if "Extract addedOn time from IssuanceKeyId detail" then
                    -->[IssuanceKeyPublicationTimestampNotFoundOnChain] "ValidationResult"
                else
                    -->[success] "IssuingKeyAddedOnTimestamp" #Orange
                === q === --> "MaybeIssuingKeyRevokedOnTimestamp" #Orange
    "Credential" --> if "Extract IssuerDID from Credential Payload" then
        -->[IssuerDIDNotFoundInCredential] "ValidationResult"
    else
        -->[success] === d ===
        === d === --> "Generate BatchId"
        if "nodeServiceApi.getBatchState" then
            -->[BatchNotFoundOnChain] "ValidationResult"
        else
            -->[success] === f ===
            === f === --> if "Extract published time from BatchState" then
                -->[BatchPublicationTimestampNotFoundOnChain] "ValidationResult"
            else
                -->[success] "BatchIssuedOnTimestamp" #Orange
            === f === --> "MaybeBatchRevokedOnTimestamp" #Orange


        === d === --> "nodeServiceApi.getCredentialRevocationTime"
        --> "Extract revokedOn time if present from CredentialRevocationTime if present"
        --> "MaybeCredentialRevocationTime"

        "MaybeBatchRevokedOnTimestamp"-->"credentialBatchNotRevoked"
        "IssuingKeyAddedOnTimestamp" --> "keyAddedBeforeIssuance"
        "BatchIssuedOnTimestamp" --> "keyAddedBeforeIssuance"
        "MaybeIssuingKeyRevokedOnTimestamp" --> "keyNotRevoked"
        "BatchIssuedOnTimestamp" --> "keyNotRevoked"
        "IssuingKey" --> "signatureIsValid"
        "MaybeCredentialRevocationTime" --> "individualCredentialNotRevoked"
        "Credential" --> "merkleProofIsValid"
        "MerkleInclusionProof" --> "merkleProofIsValid"

        "credentialBatchNotRevoked" #LightGreen --> [BatchWasRevoked(revokedOn: TimestampInfo)] "ValidationResult"
        "keyAddedBeforeIssuance" #LightGreen --> [KeyWasNotValid(keyAddedOn: TimestampInfo, credentialIssuedOn: TimestampInfo)] "ValidationResult"
        "keyNotRevoked" #LightGreen --> [KeyWasRevoked(credentialIssuedOn: TimestampInfo, keyRevokedOn: TimestampInfo)] "ValidationResult"
        "signatureIsValid" #LightGreen --> [InvalidSignature] "ValidationResult"
        "individualCredentialNotRevoked" #LightGreen -->[CredentialWasRevoked(revokedOn: TimestampInfo)] "ValidationResult"
        "merkleProofIsValid" #LightGreen -->[MerkleProofNotValid] "ValidationResult"

        "ValidationResult" #Orange --> (*)

@enduml