@startuml
digraph prism_on_premise_deployment {
  # this is deployment dependency graph:
  # - nodes with no dependencies are the first to be deployed.
  # - nodes with dependencies can be deployed only after its dependencies.
  # - "a -> b" means that "b" can be deployed only when "a" is ready.
  # - a topological order can allow us to deploy services in parallel and in the right order.

  # prism is the whole deployment without considering how to talk to it from the public internet
  prism

  # cardano components
  cardano_node
  cardano_wallet
  cardano_dbsync
  
  # storage components
  # each of these likely needs to RAID
  storage_postgres_node
  storage_postgres_connector
  storage_postgres_vault
  storage_postgres_console
  storage_postgres_dbsync
  storage_cardano_node

  # postgres databases
  # each of these likely needs multiple instances with replication, and,
  # possibly, a connection pool like PgBouncer
  postgres_node
  postgres_connector
  postgres_vault
  postgres_console
  postgres_dbsync

  # each postgres instance needs storage
  storage_postgres_node -> postgres_node
  storage_postgres_connector -> postgres_connector
  storage_postgres_vault -> postgres_vault
  storage_postgres_console -> postgres_console
  storage_postgres_dbsync -> postgres_dbsync

  # cardano node requires storage because the blockchain data is huge
  storage_cardano_node -> cardano_node
  postgres_dbsync -> cardano_dbsync

  # the prism backend services
  # each of these likely needs many instances and a load balancer in front
  "node"
  connector
  console
  vault

  console_web_nginx
  docs_website_nginx

  postgres_node -> "node"
  postgres_connector -> connector
  postgres_vault -> vault
  postgres_console -> console

  cardano_node -> cardano_wallet
  cardano_node -> cardano_dbsync

  cardano_wallet -> "node"
  cardano_dbsync -> "node"

  "node" -> connector
  "node" -> console
  "node" -> vault

  "node" -> prism_backend
  connector -> prism_backend
  vault -> prism_backend
  console -> prism_backend

  prism_backend -> envoy
  docs_website_nginx -> envoy
  console_web_nginx -> envoy

  envoy -> prism
}
@enduml
