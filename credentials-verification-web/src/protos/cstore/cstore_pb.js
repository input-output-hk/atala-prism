/* eslint-disable */
// source: cstore.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.io.iohk.cvp.cstore.CreateIndividualRequest', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.CreateIndividualResponse', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.GetIndividualsRequest', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.GetIndividualsResponse', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.Individual', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.IndividualConnectionStatus', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.RegisterRequest', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.RegisterResponse', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.SignedCredential', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.StoreCredentialRequest', null, global);
goog.exportSymbol('proto.io.iohk.cvp.cstore.StoreCredentialResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.RegisterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.RegisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.RegisterRequest.displayName = 'proto.io.iohk.cvp.cstore.RegisterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.RegisterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.RegisterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.RegisterResponse.displayName = 'proto.io.iohk.cvp.cstore.RegisterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.CreateIndividualRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.CreateIndividualRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.CreateIndividualRequest.displayName = 'proto.io.iohk.cvp.cstore.CreateIndividualRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.CreateIndividualResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.CreateIndividualResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.CreateIndividualResponse.displayName = 'proto.io.iohk.cvp.cstore.CreateIndividualResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.displayName = 'proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.Individual = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.Individual, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.Individual.displayName = 'proto.io.iohk.cvp.cstore.Individual';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.GetIndividualsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.GetIndividualsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.GetIndividualsRequest.displayName = 'proto.io.iohk.cvp.cstore.GetIndividualsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.GetIndividualsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.iohk.cvp.cstore.GetIndividualsResponse.repeatedFields_, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.GetIndividualsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.GetIndividualsResponse.displayName = 'proto.io.iohk.cvp.cstore.GetIndividualsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.displayName = 'proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.SignedCredential = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.SignedCredential, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.SignedCredential.displayName = 'proto.io.iohk.cvp.cstore.SignedCredential';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.StoreCredentialRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.StoreCredentialRequest.displayName = 'proto.io.iohk.cvp.cstore.StoreCredentialRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.StoreCredentialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.StoreCredentialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.StoreCredentialResponse.displayName = 'proto.io.iohk.cvp.cstore.StoreCredentialResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.displayName = 'proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.repeatedFields_, null);
};
goog.inherits(proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.displayName = 'proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.RegisterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.RegisterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.RegisterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.RegisterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    logo: msg.getLogo_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.RegisterRequest}
 */
proto.io.iohk.cvp.cstore.RegisterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.RegisterRequest;
  return proto.io.iohk.cvp.cstore.RegisterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.RegisterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.RegisterRequest}
 */
proto.io.iohk.cvp.cstore.RegisterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLogo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.RegisterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.RegisterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.RegisterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.RegisterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLogo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.RegisterRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.RegisterRequest} returns this
 */
proto.io.iohk.cvp.cstore.RegisterRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes logo = 3;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.RegisterRequest.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes logo = 3;
 * This is a type-conversion wrapper around `getLogo()`
 * @return {string}
 */
proto.io.iohk.cvp.cstore.RegisterRequest.prototype.getLogo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLogo()));
};


/**
 * optional bytes logo = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLogo()`
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.RegisterRequest.prototype.getLogo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLogo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.cvp.cstore.RegisterRequest} returns this
 */
proto.io.iohk.cvp.cstore.RegisterRequest.prototype.setLogo = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.RegisterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.RegisterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.RegisterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.RegisterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.RegisterResponse}
 */
proto.io.iohk.cvp.cstore.RegisterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.RegisterResponse;
  return proto.io.iohk.cvp.cstore.RegisterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.RegisterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.RegisterResponse}
 */
proto.io.iohk.cvp.cstore.RegisterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.RegisterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.RegisterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.RegisterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.RegisterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string userId = 1;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.RegisterResponse.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.RegisterResponse} returns this
 */
proto.io.iohk.cvp.cstore.RegisterResponse.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.CreateIndividualRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.CreateIndividualRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.CreateIndividualRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.CreateIndividualRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fullname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.CreateIndividualRequest}
 */
proto.io.iohk.cvp.cstore.CreateIndividualRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.CreateIndividualRequest;
  return proto.io.iohk.cvp.cstore.CreateIndividualRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.CreateIndividualRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.CreateIndividualRequest}
 */
proto.io.iohk.cvp.cstore.CreateIndividualRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.CreateIndividualRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.CreateIndividualRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.CreateIndividualRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.CreateIndividualRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFullname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string fullName = 1;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.CreateIndividualRequest.prototype.getFullname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.CreateIndividualRequest} returns this
 */
proto.io.iohk.cvp.cstore.CreateIndividualRequest.prototype.setFullname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.CreateIndividualRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.CreateIndividualRequest} returns this
 */
proto.io.iohk.cvp.cstore.CreateIndividualRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.CreateIndividualResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.CreateIndividualResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.CreateIndividualResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.CreateIndividualResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    individual: (f = msg.getIndividual()) && proto.io.iohk.cvp.cstore.Individual.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.CreateIndividualResponse}
 */
proto.io.iohk.cvp.cstore.CreateIndividualResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.CreateIndividualResponse;
  return proto.io.iohk.cvp.cstore.CreateIndividualResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.CreateIndividualResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.CreateIndividualResponse}
 */
proto.io.iohk.cvp.cstore.CreateIndividualResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.iohk.cvp.cstore.Individual;
      reader.readMessage(value,proto.io.iohk.cvp.cstore.Individual.deserializeBinaryFromReader);
      msg.setIndividual(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.CreateIndividualResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.CreateIndividualResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.CreateIndividualResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.CreateIndividualResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndividual();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.iohk.cvp.cstore.Individual.serializeBinaryToWriter
    );
  }
};


/**
 * optional Individual individual = 1;
 * @return {?proto.io.iohk.cvp.cstore.Individual}
 */
proto.io.iohk.cvp.cstore.CreateIndividualResponse.prototype.getIndividual = function() {
  return /** @type{?proto.io.iohk.cvp.cstore.Individual} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.cvp.cstore.Individual, 1));
};


/**
 * @param {?proto.io.iohk.cvp.cstore.Individual|undefined} value
 * @return {!proto.io.iohk.cvp.cstore.CreateIndividualResponse} returns this
*/
proto.io.iohk.cvp.cstore.CreateIndividualResponse.prototype.setIndividual = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.cvp.cstore.CreateIndividualResponse} returns this
 */
proto.io.iohk.cvp.cstore.CreateIndividualResponse.prototype.clearIndividual = function() {
  return this.setIndividual(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.cvp.cstore.CreateIndividualResponse.prototype.hasIndividual = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    individualid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest}
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest;
  return proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest}
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndividualid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndividualid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string individualId = 1;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.prototype.getIndividualid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest} returns this
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForRequest.prototype.setIndividualid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.Individual.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.Individual.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.Individual} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.Individual.toObject = function(includeInstance, msg) {
  var f, obj = {
    individualid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fullname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    email: jspb.Message.getFieldWithDefault(msg, 4, ""),
    connectiontoken: jspb.Message.getFieldWithDefault(msg, 5, ""),
    connectionid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.Individual}
 */
proto.io.iohk.cvp.cstore.Individual.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.Individual;
  return proto.io.iohk.cvp.cstore.Individual.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.Individual} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.Individual}
 */
proto.io.iohk.cvp.cstore.Individual.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndividualid(value);
      break;
    case 2:
      var value = /** @type {!proto.io.iohk.cvp.cstore.IndividualConnectionStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectiontoken(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.Individual.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.Individual.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.Individual} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.Individual.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndividualid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getFullname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConnectiontoken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getConnectionid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string individualId = 1;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.Individual.prototype.getIndividualid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.Individual} returns this
 */
proto.io.iohk.cvp.cstore.Individual.prototype.setIndividualid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional IndividualConnectionStatus status = 2;
 * @return {!proto.io.iohk.cvp.cstore.IndividualConnectionStatus}
 */
proto.io.iohk.cvp.cstore.Individual.prototype.getStatus = function() {
  return /** @type {!proto.io.iohk.cvp.cstore.IndividualConnectionStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.io.iohk.cvp.cstore.IndividualConnectionStatus} value
 * @return {!proto.io.iohk.cvp.cstore.Individual} returns this
 */
proto.io.iohk.cvp.cstore.Individual.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string fullName = 3;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.Individual.prototype.getFullname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.Individual} returns this
 */
proto.io.iohk.cvp.cstore.Individual.prototype.setFullname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.Individual.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.Individual} returns this
 */
proto.io.iohk.cvp.cstore.Individual.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string connectionToken = 5;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.Individual.prototype.getConnectiontoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.Individual} returns this
 */
proto.io.iohk.cvp.cstore.Individual.prototype.setConnectiontoken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string connectionId = 6;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.Individual.prototype.getConnectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.Individual} returns this
 */
proto.io.iohk.cvp.cstore.Individual.prototype.setConnectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.GetIndividualsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.GetIndividualsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.GetIndividualsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GetIndividualsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lastseenindividualid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.GetIndividualsRequest}
 */
proto.io.iohk.cvp.cstore.GetIndividualsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.GetIndividualsRequest;
  return proto.io.iohk.cvp.cstore.GetIndividualsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.GetIndividualsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.GetIndividualsRequest}
 */
proto.io.iohk.cvp.cstore.GetIndividualsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastseenindividualid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.GetIndividualsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.GetIndividualsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.GetIndividualsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GetIndividualsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLastseenindividualid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.io.iohk.cvp.cstore.GetIndividualsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.iohk.cvp.cstore.GetIndividualsRequest} returns this
 */
proto.io.iohk.cvp.cstore.GetIndividualsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string lastSeenIndividualId = 2;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.GetIndividualsRequest.prototype.getLastseenindividualid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.GetIndividualsRequest} returns this
 */
proto.io.iohk.cvp.cstore.GetIndividualsRequest.prototype.setLastseenindividualid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.iohk.cvp.cstore.GetIndividualsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.GetIndividualsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.GetIndividualsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.GetIndividualsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GetIndividualsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    individualsList: jspb.Message.toObjectList(msg.getIndividualsList(),
    proto.io.iohk.cvp.cstore.Individual.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.GetIndividualsResponse}
 */
proto.io.iohk.cvp.cstore.GetIndividualsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.GetIndividualsResponse;
  return proto.io.iohk.cvp.cstore.GetIndividualsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.GetIndividualsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.GetIndividualsResponse}
 */
proto.io.iohk.cvp.cstore.GetIndividualsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.iohk.cvp.cstore.Individual;
      reader.readMessage(value,proto.io.iohk.cvp.cstore.Individual.deserializeBinaryFromReader);
      msg.addIndividuals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.GetIndividualsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.GetIndividualsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.GetIndividualsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GetIndividualsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndividualsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.iohk.cvp.cstore.Individual.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Individual individuals = 1;
 * @return {!Array<!proto.io.iohk.cvp.cstore.Individual>}
 */
proto.io.iohk.cvp.cstore.GetIndividualsResponse.prototype.getIndividualsList = function() {
  return /** @type{!Array<!proto.io.iohk.cvp.cstore.Individual>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.iohk.cvp.cstore.Individual, 1));
};


/**
 * @param {!Array<!proto.io.iohk.cvp.cstore.Individual>} value
 * @return {!proto.io.iohk.cvp.cstore.GetIndividualsResponse} returns this
*/
proto.io.iohk.cvp.cstore.GetIndividualsResponse.prototype.setIndividualsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.iohk.cvp.cstore.Individual=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.iohk.cvp.cstore.Individual}
 */
proto.io.iohk.cvp.cstore.GetIndividualsResponse.prototype.addIndividuals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.iohk.cvp.cstore.Individual, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.iohk.cvp.cstore.GetIndividualsResponse} returns this
 */
proto.io.iohk.cvp.cstore.GetIndividualsResponse.prototype.clearIndividualsList = function() {
  return this.setIndividualsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse}
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse;
  return proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse}
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse} returns this
 */
proto.io.iohk.cvp.cstore.GenerateConnectionTokenForResponse.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.SignedCredential.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.SignedCredential} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.SignedCredential.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuerdid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    proofid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    content: msg.getContent_asB64(),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.SignedCredential}
 */
proto.io.iohk.cvp.cstore.SignedCredential.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.SignedCredential;
  return proto.io.iohk.cvp.cstore.SignedCredential.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.SignedCredential} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.SignedCredential}
 */
proto.io.iohk.cvp.cstore.SignedCredential.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuerdid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.SignedCredential.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.SignedCredential} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.SignedCredential.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuerdid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProofid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string issuerDid = 1;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.getIssuerdid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.SignedCredential} returns this
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.setIssuerdid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string proofId = 2;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.getProofid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.SignedCredential} returns this
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.setProofid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes content = 3;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes content = 3;
 * This is a type-conversion wrapper around `getContent()`
 * @return {string}
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.getContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContent()));
};


/**
 * optional bytes content = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContent()`
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.getContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.cvp.cstore.SignedCredential} returns this
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.setContent = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes signature = 4;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes signature = 4;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.cvp.cstore.SignedCredential} returns this
 */
proto.io.iohk.cvp.cstore.SignedCredential.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.StoreCredentialRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.StoreCredentialRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    individualid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    issuerdid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    proofid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: msg.getContent_asB64(),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.StoreCredentialRequest}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.StoreCredentialRequest;
  return proto.io.iohk.cvp.cstore.StoreCredentialRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.StoreCredentialRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.StoreCredentialRequest}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndividualid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuerdid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProofid(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.StoreCredentialRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.StoreCredentialRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndividualid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIssuerdid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProofid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional string individualId = 1;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.getIndividualid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.StoreCredentialRequest} returns this
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.setIndividualid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string issuerDid = 2;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.getIssuerdid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.StoreCredentialRequest} returns this
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.setIssuerdid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string proofId = 3;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.getProofid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.StoreCredentialRequest} returns this
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.setProofid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes content = 4;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes content = 4;
 * This is a type-conversion wrapper around `getContent()`
 * @return {string}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.getContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContent()));
};


/**
 * optional bytes content = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContent()`
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.getContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.cvp.cstore.StoreCredentialRequest} returns this
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes signature = 5;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes signature = 5;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.cvp.cstore.StoreCredentialRequest} returns this
 */
proto.io.iohk.cvp.cstore.StoreCredentialRequest.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.StoreCredentialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.StoreCredentialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.StoreCredentialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.StoreCredentialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.StoreCredentialResponse}
 */
proto.io.iohk.cvp.cstore.StoreCredentialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.StoreCredentialResponse;
  return proto.io.iohk.cvp.cstore.StoreCredentialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.StoreCredentialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.StoreCredentialResponse}
 */
proto.io.iohk.cvp.cstore.StoreCredentialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.StoreCredentialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.StoreCredentialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.StoreCredentialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.StoreCredentialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    individualid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest}
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest;
  return proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest}
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndividualid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndividualid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string individualId = 1;
 * @return {string}
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.prototype.getIndividualid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest} returns this
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForRequest.prototype.setIndividualid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialsList: jspb.Message.toObjectList(msg.getCredentialsList(),
    proto.io.iohk.cvp.cstore.SignedCredential.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse}
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse;
  return proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse}
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.iohk.cvp.cstore.SignedCredential;
      reader.readMessage(value,proto.io.iohk.cvp.cstore.SignedCredential.deserializeBinaryFromReader);
      msg.addCredentials(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.iohk.cvp.cstore.SignedCredential.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SignedCredential credentials = 1;
 * @return {!Array<!proto.io.iohk.cvp.cstore.SignedCredential>}
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.prototype.getCredentialsList = function() {
  return /** @type{!Array<!proto.io.iohk.cvp.cstore.SignedCredential>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.iohk.cvp.cstore.SignedCredential, 1));
};


/**
 * @param {!Array<!proto.io.iohk.cvp.cstore.SignedCredential>} value
 * @return {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse} returns this
*/
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.prototype.setCredentialsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.iohk.cvp.cstore.SignedCredential=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.iohk.cvp.cstore.SignedCredential}
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.prototype.addCredentials = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.iohk.cvp.cstore.SignedCredential, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse} returns this
 */
proto.io.iohk.cvp.cstore.GetStoredCredentialsForResponse.prototype.clearCredentialsList = function() {
  return this.setCredentialsList([]);
};


/**
 * @enum {number}
 */
proto.io.iohk.cvp.cstore.IndividualConnectionStatus = {
  CREATED: 0,
  INVITED: 1,
  CONNECTED: 2,
  REVOKED: 3
};

goog.object.extend(exports, proto.io.iohk.cvp.cstore);
