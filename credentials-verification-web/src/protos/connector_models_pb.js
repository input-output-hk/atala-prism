/* eslint-disable */
// source: connector_models.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.io.iohk.prism.protos.BillingPlan', null, global);
goog.exportSymbol('proto.io.iohk.prism.protos.Connection', null, global);
goog.exportSymbol('proto.io.iohk.prism.protos.ConnectionInfo', null, global);
goog.exportSymbol('proto.io.iohk.prism.protos.ConnectorPublicKey', null, global);
goog.exportSymbol('proto.io.iohk.prism.protos.EncodedPublicKey', null, global);
goog.exportSymbol('proto.io.iohk.prism.protos.HolderInfo', null, global);
goog.exportSymbol('proto.io.iohk.prism.protos.IssuerInfo', null, global);
goog.exportSymbol('proto.io.iohk.prism.protos.ParticipantInfo', null, global);
goog.exportSymbol('proto.io.iohk.prism.protos.ParticipantInfo.ParticipantCase', null, global);
goog.exportSymbol('proto.io.iohk.prism.protos.Payment', null, global);
goog.exportSymbol('proto.io.iohk.prism.protos.ReceivedMessage', null, global);
goog.exportSymbol('proto.io.iohk.prism.protos.VerifierInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.prism.protos.ConnectorPublicKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.prism.protos.ConnectorPublicKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.prism.protos.ConnectorPublicKey.displayName = 'proto.io.iohk.prism.protos.ConnectorPublicKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.prism.protos.EncodedPublicKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.prism.protos.EncodedPublicKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.prism.protos.EncodedPublicKey.displayName = 'proto.io.iohk.prism.protos.EncodedPublicKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.prism.protos.IssuerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.prism.protos.IssuerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.prism.protos.IssuerInfo.displayName = 'proto.io.iohk.prism.protos.IssuerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.prism.protos.VerifierInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.prism.protos.VerifierInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.prism.protos.VerifierInfo.displayName = 'proto.io.iohk.prism.protos.VerifierInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.prism.protos.HolderInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.prism.protos.HolderInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.prism.protos.HolderInfo.displayName = 'proto.io.iohk.prism.protos.HolderInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.prism.protos.ParticipantInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.iohk.prism.protos.ParticipantInfo.oneofGroups_);
};
goog.inherits(proto.io.iohk.prism.protos.ParticipantInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.prism.protos.ParticipantInfo.displayName = 'proto.io.iohk.prism.protos.ParticipantInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.prism.protos.Connection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.prism.protos.Connection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.prism.protos.Connection.displayName = 'proto.io.iohk.prism.protos.Connection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.prism.protos.ConnectionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.prism.protos.ConnectionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.prism.protos.ConnectionInfo.displayName = 'proto.io.iohk.prism.protos.ConnectionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.prism.protos.ReceivedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.prism.protos.ReceivedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.prism.protos.ReceivedMessage.displayName = 'proto.io.iohk.prism.protos.ReceivedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.prism.protos.Payment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.prism.protos.Payment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.prism.protos.Payment.displayName = 'proto.io.iohk.prism.protos.Payment';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.prism.protos.ConnectorPublicKey.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.prism.protos.ConnectorPublicKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.prism.protos.ConnectorPublicKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.ConnectorPublicKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFieldWithDefault(msg, 1, ""),
    y: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.prism.protos.ConnectorPublicKey}
 */
proto.io.iohk.prism.protos.ConnectorPublicKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.prism.protos.ConnectorPublicKey;
  return proto.io.iohk.prism.protos.ConnectorPublicKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.prism.protos.ConnectorPublicKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.prism.protos.ConnectorPublicKey}
 */
proto.io.iohk.prism.protos.ConnectorPublicKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.ConnectorPublicKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.prism.protos.ConnectorPublicKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.prism.protos.ConnectorPublicKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.ConnectorPublicKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getY();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string x = 1;
 * @return {string}
 */
proto.io.iohk.prism.protos.ConnectorPublicKey.prototype.getX = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.ConnectorPublicKey} returns this
 */
proto.io.iohk.prism.protos.ConnectorPublicKey.prototype.setX = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string y = 2;
 * @return {string}
 */
proto.io.iohk.prism.protos.ConnectorPublicKey.prototype.getY = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.ConnectorPublicKey} returns this
 */
proto.io.iohk.prism.protos.ConnectorPublicKey.prototype.setY = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.prism.protos.EncodedPublicKey.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.prism.protos.EncodedPublicKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.prism.protos.EncodedPublicKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.EncodedPublicKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    publickey: msg.getPublickey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.prism.protos.EncodedPublicKey}
 */
proto.io.iohk.prism.protos.EncodedPublicKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.prism.protos.EncodedPublicKey;
  return proto.io.iohk.prism.protos.EncodedPublicKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.prism.protos.EncodedPublicKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.prism.protos.EncodedPublicKey}
 */
proto.io.iohk.prism.protos.EncodedPublicKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPublickey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.EncodedPublicKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.prism.protos.EncodedPublicKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.prism.protos.EncodedPublicKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.EncodedPublicKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublickey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes publicKey = 1;
 * @return {string}
 */
proto.io.iohk.prism.protos.EncodedPublicKey.prototype.getPublickey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes publicKey = 1;
 * This is a type-conversion wrapper around `getPublickey()`
 * @return {string}
 */
proto.io.iohk.prism.protos.EncodedPublicKey.prototype.getPublickey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPublickey()));
};


/**
 * optional bytes publicKey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPublickey()`
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.EncodedPublicKey.prototype.getPublickey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPublickey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.prism.protos.EncodedPublicKey} returns this
 */
proto.io.iohk.prism.protos.EncodedPublicKey.prototype.setPublickey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.prism.protos.IssuerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.prism.protos.IssuerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.prism.protos.IssuerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.IssuerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    logo: msg.getLogo_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.prism.protos.IssuerInfo}
 */
proto.io.iohk.prism.protos.IssuerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.prism.protos.IssuerInfo;
  return proto.io.iohk.prism.protos.IssuerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.prism.protos.IssuerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.prism.protos.IssuerInfo}
 */
proto.io.iohk.prism.protos.IssuerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLogo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.IssuerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.prism.protos.IssuerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.prism.protos.IssuerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.IssuerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLogo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string DID = 1;
 * @return {string}
 */
proto.io.iohk.prism.protos.IssuerInfo.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.IssuerInfo} returns this
 */
proto.io.iohk.prism.protos.IssuerInfo.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.io.iohk.prism.protos.IssuerInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.IssuerInfo} returns this
 */
proto.io.iohk.prism.protos.IssuerInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes logo = 3;
 * @return {string}
 */
proto.io.iohk.prism.protos.IssuerInfo.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes logo = 3;
 * This is a type-conversion wrapper around `getLogo()`
 * @return {string}
 */
proto.io.iohk.prism.protos.IssuerInfo.prototype.getLogo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLogo()));
};


/**
 * optional bytes logo = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLogo()`
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.IssuerInfo.prototype.getLogo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLogo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.prism.protos.IssuerInfo} returns this
 */
proto.io.iohk.prism.protos.IssuerInfo.prototype.setLogo = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.prism.protos.VerifierInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.prism.protos.VerifierInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.prism.protos.VerifierInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.VerifierInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    logo: msg.getLogo_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.prism.protos.VerifierInfo}
 */
proto.io.iohk.prism.protos.VerifierInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.prism.protos.VerifierInfo;
  return proto.io.iohk.prism.protos.VerifierInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.prism.protos.VerifierInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.prism.protos.VerifierInfo}
 */
proto.io.iohk.prism.protos.VerifierInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLogo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.VerifierInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.prism.protos.VerifierInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.prism.protos.VerifierInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.VerifierInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLogo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string DID = 1;
 * @return {string}
 */
proto.io.iohk.prism.protos.VerifierInfo.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.VerifierInfo} returns this
 */
proto.io.iohk.prism.protos.VerifierInfo.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.io.iohk.prism.protos.VerifierInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.VerifierInfo} returns this
 */
proto.io.iohk.prism.protos.VerifierInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes logo = 3;
 * @return {string}
 */
proto.io.iohk.prism.protos.VerifierInfo.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes logo = 3;
 * This is a type-conversion wrapper around `getLogo()`
 * @return {string}
 */
proto.io.iohk.prism.protos.VerifierInfo.prototype.getLogo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLogo()));
};


/**
 * optional bytes logo = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLogo()`
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.VerifierInfo.prototype.getLogo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLogo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.prism.protos.VerifierInfo} returns this
 */
proto.io.iohk.prism.protos.VerifierInfo.prototype.setLogo = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.prism.protos.HolderInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.prism.protos.HolderInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.prism.protos.HolderInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.HolderInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.prism.protos.HolderInfo}
 */
proto.io.iohk.prism.protos.HolderInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.prism.protos.HolderInfo;
  return proto.io.iohk.prism.protos.HolderInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.prism.protos.HolderInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.prism.protos.HolderInfo}
 */
proto.io.iohk.prism.protos.HolderInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.HolderInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.prism.protos.HolderInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.prism.protos.HolderInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.HolderInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string DID = 1;
 * @return {string}
 */
proto.io.iohk.prism.protos.HolderInfo.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.HolderInfo} returns this
 */
proto.io.iohk.prism.protos.HolderInfo.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.io.iohk.prism.protos.HolderInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.HolderInfo} returns this
 */
proto.io.iohk.prism.protos.HolderInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.iohk.prism.protos.ParticipantInfo.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.io.iohk.prism.protos.ParticipantInfo.ParticipantCase = {
  PARTICIPANT_NOT_SET: 0,
  ISSUER: 1,
  HOLDER: 2,
  VERIFIER: 3
};

/**
 * @return {proto.io.iohk.prism.protos.ParticipantInfo.ParticipantCase}
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.getParticipantCase = function() {
  return /** @type {proto.io.iohk.prism.protos.ParticipantInfo.ParticipantCase} */(jspb.Message.computeOneofCase(this, proto.io.iohk.prism.protos.ParticipantInfo.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.prism.protos.ParticipantInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.prism.protos.ParticipantInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.ParticipantInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuer: (f = msg.getIssuer()) && proto.io.iohk.prism.protos.IssuerInfo.toObject(includeInstance, f),
    holder: (f = msg.getHolder()) && proto.io.iohk.prism.protos.HolderInfo.toObject(includeInstance, f),
    verifier: (f = msg.getVerifier()) && proto.io.iohk.prism.protos.VerifierInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.prism.protos.ParticipantInfo}
 */
proto.io.iohk.prism.protos.ParticipantInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.prism.protos.ParticipantInfo;
  return proto.io.iohk.prism.protos.ParticipantInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.prism.protos.ParticipantInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.prism.protos.ParticipantInfo}
 */
proto.io.iohk.prism.protos.ParticipantInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.iohk.prism.protos.IssuerInfo;
      reader.readMessage(value,proto.io.iohk.prism.protos.IssuerInfo.deserializeBinaryFromReader);
      msg.setIssuer(value);
      break;
    case 2:
      var value = new proto.io.iohk.prism.protos.HolderInfo;
      reader.readMessage(value,proto.io.iohk.prism.protos.HolderInfo.deserializeBinaryFromReader);
      msg.setHolder(value);
      break;
    case 3:
      var value = new proto.io.iohk.prism.protos.VerifierInfo;
      reader.readMessage(value,proto.io.iohk.prism.protos.VerifierInfo.deserializeBinaryFromReader);
      msg.setVerifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.prism.protos.ParticipantInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.prism.protos.ParticipantInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.ParticipantInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.iohk.prism.protos.IssuerInfo.serializeBinaryToWriter
    );
  }
  f = message.getHolder();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.iohk.prism.protos.HolderInfo.serializeBinaryToWriter
    );
  }
  f = message.getVerifier();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.iohk.prism.protos.VerifierInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional IssuerInfo issuer = 1;
 * @return {?proto.io.iohk.prism.protos.IssuerInfo}
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.getIssuer = function() {
  return /** @type{?proto.io.iohk.prism.protos.IssuerInfo} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.prism.protos.IssuerInfo, 1));
};


/**
 * @param {?proto.io.iohk.prism.protos.IssuerInfo|undefined} value
 * @return {!proto.io.iohk.prism.protos.ParticipantInfo} returns this
*/
proto.io.iohk.prism.protos.ParticipantInfo.prototype.setIssuer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.iohk.prism.protos.ParticipantInfo.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.prism.protos.ParticipantInfo} returns this
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.clearIssuer = function() {
  return this.setIssuer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.hasIssuer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional HolderInfo holder = 2;
 * @return {?proto.io.iohk.prism.protos.HolderInfo}
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.getHolder = function() {
  return /** @type{?proto.io.iohk.prism.protos.HolderInfo} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.prism.protos.HolderInfo, 2));
};


/**
 * @param {?proto.io.iohk.prism.protos.HolderInfo|undefined} value
 * @return {!proto.io.iohk.prism.protos.ParticipantInfo} returns this
*/
proto.io.iohk.prism.protos.ParticipantInfo.prototype.setHolder = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.iohk.prism.protos.ParticipantInfo.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.prism.protos.ParticipantInfo} returns this
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.clearHolder = function() {
  return this.setHolder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.hasHolder = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional VerifierInfo verifier = 3;
 * @return {?proto.io.iohk.prism.protos.VerifierInfo}
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.getVerifier = function() {
  return /** @type{?proto.io.iohk.prism.protos.VerifierInfo} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.prism.protos.VerifierInfo, 3));
};


/**
 * @param {?proto.io.iohk.prism.protos.VerifierInfo|undefined} value
 * @return {!proto.io.iohk.prism.protos.ParticipantInfo} returns this
*/
proto.io.iohk.prism.protos.ParticipantInfo.prototype.setVerifier = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.iohk.prism.protos.ParticipantInfo.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.prism.protos.ParticipantInfo} returns this
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.clearVerifier = function() {
  return this.setVerifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.prism.protos.ParticipantInfo.prototype.hasVerifier = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.prism.protos.Connection.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.prism.protos.Connection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.prism.protos.Connection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.Connection.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectiontoken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    connectionid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.prism.protos.Connection}
 */
proto.io.iohk.prism.protos.Connection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.prism.protos.Connection;
  return proto.io.iohk.prism.protos.Connection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.prism.protos.Connection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.prism.protos.Connection}
 */
proto.io.iohk.prism.protos.Connection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectiontoken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.Connection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.prism.protos.Connection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.prism.protos.Connection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.Connection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectiontoken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnectionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string connectionToken = 1;
 * @return {string}
 */
proto.io.iohk.prism.protos.Connection.prototype.getConnectiontoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.Connection} returns this
 */
proto.io.iohk.prism.protos.Connection.prototype.setConnectiontoken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string connectionId = 2;
 * @return {string}
 */
proto.io.iohk.prism.protos.Connection.prototype.getConnectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.Connection} returns this
 */
proto.io.iohk.prism.protos.Connection.prototype.setConnectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.prism.protos.ConnectionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.prism.protos.ConnectionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.prism.protos.ConnectionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.ConnectionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    created: jspb.Message.getFieldWithDefault(msg, 2, 0),
    participantinfo: (f = msg.getParticipantinfo()) && proto.io.iohk.prism.protos.ParticipantInfo.toObject(includeInstance, f),
    token: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.prism.protos.ConnectionInfo}
 */
proto.io.iohk.prism.protos.ConnectionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.prism.protos.ConnectionInfo;
  return proto.io.iohk.prism.protos.ConnectionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.prism.protos.ConnectionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.prism.protos.ConnectionInfo}
 */
proto.io.iohk.prism.protos.ConnectionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreated(value);
      break;
    case 3:
      var value = new proto.io.iohk.prism.protos.ParticipantInfo;
      reader.readMessage(value,proto.io.iohk.prism.protos.ParticipantInfo.deserializeBinaryFromReader);
      msg.setParticipantinfo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.ConnectionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.prism.protos.ConnectionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.prism.protos.ConnectionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.ConnectionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreated();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getParticipantinfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.iohk.prism.protos.ParticipantInfo.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string connectionId = 1;
 * @return {string}
 */
proto.io.iohk.prism.protos.ConnectionInfo.prototype.getConnectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.ConnectionInfo} returns this
 */
proto.io.iohk.prism.protos.ConnectionInfo.prototype.setConnectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 created = 2;
 * @return {number}
 */
proto.io.iohk.prism.protos.ConnectionInfo.prototype.getCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.iohk.prism.protos.ConnectionInfo} returns this
 */
proto.io.iohk.prism.protos.ConnectionInfo.prototype.setCreated = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional ParticipantInfo participantInfo = 3;
 * @return {?proto.io.iohk.prism.protos.ParticipantInfo}
 */
proto.io.iohk.prism.protos.ConnectionInfo.prototype.getParticipantinfo = function() {
  return /** @type{?proto.io.iohk.prism.protos.ParticipantInfo} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.prism.protos.ParticipantInfo, 3));
};


/**
 * @param {?proto.io.iohk.prism.protos.ParticipantInfo|undefined} value
 * @return {!proto.io.iohk.prism.protos.ConnectionInfo} returns this
*/
proto.io.iohk.prism.protos.ConnectionInfo.prototype.setParticipantinfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.prism.protos.ConnectionInfo} returns this
 */
proto.io.iohk.prism.protos.ConnectionInfo.prototype.clearParticipantinfo = function() {
  return this.setParticipantinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.prism.protos.ConnectionInfo.prototype.hasParticipantinfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string token = 4;
 * @return {string}
 */
proto.io.iohk.prism.protos.ConnectionInfo.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.ConnectionInfo} returns this
 */
proto.io.iohk.prism.protos.ConnectionInfo.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.prism.protos.ReceivedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.prism.protos.ReceivedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.ReceivedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    received: jspb.Message.getFieldWithDefault(msg, 2, 0),
    connectionid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    message: msg.getMessage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.prism.protos.ReceivedMessage}
 */
proto.io.iohk.prism.protos.ReceivedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.prism.protos.ReceivedMessage;
  return proto.io.iohk.prism.protos.ReceivedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.prism.protos.ReceivedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.prism.protos.ReceivedMessage}
 */
proto.io.iohk.prism.protos.ReceivedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReceived(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionid(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.prism.protos.ReceivedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.prism.protos.ReceivedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.ReceivedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReceived();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getConnectionid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.ReceivedMessage} returns this
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 received = 2;
 * @return {number}
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.getReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.iohk.prism.protos.ReceivedMessage} returns this
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.setReceived = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string connectionId = 3;
 * @return {string}
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.getConnectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.ReceivedMessage} returns this
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.setConnectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes message = 4;
 * @return {string}
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes message = 4;
 * This is a type-conversion wrapper around `getMessage()`
 * @return {string}
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.getMessage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessage()));
};


/**
 * optional bytes message = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessage()`
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.getMessage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.prism.protos.ReceivedMessage} returns this
 */
proto.io.iohk.prism.protos.ReceivedMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.prism.protos.Payment.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.prism.protos.Payment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.prism.protos.Payment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.Payment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createdon: jspb.Message.getFieldWithDefault(msg, 3, 0),
    status: jspb.Message.getFieldWithDefault(msg, 4, ""),
    failurereason: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.prism.protos.Payment}
 */
proto.io.iohk.prism.protos.Payment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.prism.protos.Payment;
  return proto.io.iohk.prism.protos.Payment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.prism.protos.Payment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.prism.protos.Payment}
 */
proto.io.iohk.prism.protos.Payment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedon(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurereason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.prism.protos.Payment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.prism.protos.Payment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.prism.protos.Payment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.prism.protos.Payment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreatedon();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFailurereason();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.iohk.prism.protos.Payment.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.Payment} returns this
 */
proto.io.iohk.prism.protos.Payment.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.io.iohk.prism.protos.Payment.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.Payment} returns this
 */
proto.io.iohk.prism.protos.Payment.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 createdOn = 3;
 * @return {number}
 */
proto.io.iohk.prism.protos.Payment.prototype.getCreatedon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.iohk.prism.protos.Payment} returns this
 */
proto.io.iohk.prism.protos.Payment.prototype.setCreatedon = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string status = 4;
 * @return {string}
 */
proto.io.iohk.prism.protos.Payment.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.Payment} returns this
 */
proto.io.iohk.prism.protos.Payment.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string failureReason = 5;
 * @return {string}
 */
proto.io.iohk.prism.protos.Payment.prototype.getFailurereason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.prism.protos.Payment} returns this
 */
proto.io.iohk.prism.protos.Payment.prototype.setFailurereason = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.io.iohk.prism.protos.BillingPlan = {
  NO_PLAN: 0,
  FREE_PLAN: 1,
  SENDER_PAYS: 2,
  RECEIVER_PAYS: 3
};

goog.object.extend(exports, proto.io.iohk.prism.protos);
