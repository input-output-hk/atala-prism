/* eslint-disable */
// source: node_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.io.iohk.nodenew.AddKeyAction', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.AtalaOperation', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.AtalaOperation.OperationCase', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.CreateDIDOperation', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.CreateDIDResponse', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.CredentialData', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.DIDData', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.Date', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.ECKeyData', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.GetDidDocumentRequest', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.GetDidDocumentResponse', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.IssueCredentialOperation', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.IssueCredentialResponse', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.KeyUsage', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.PublicKey', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.PublicKey.KeydataCase', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.RemoveKeyAction', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.RevokeCredentialOperation', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.RevokeCredentialResponse', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.SignedAtalaOperation', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.UpdateDIDAction', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.UpdateDIDAction.ActionCase', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.UpdateDIDOperation', null, global);
goog.exportSymbol('proto.io.iohk.nodenew.UpdateDIDResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.Date = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.Date, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.Date.displayName = 'proto.io.iohk.nodenew.Date';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.ECKeyData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.ECKeyData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.ECKeyData.displayName = 'proto.io.iohk.nodenew.ECKeyData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.PublicKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.iohk.nodenew.PublicKey.oneofGroups_);
};
goog.inherits(proto.io.iohk.nodenew.PublicKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.PublicKey.displayName = 'proto.io.iohk.nodenew.PublicKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.DIDData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.iohk.nodenew.DIDData.repeatedFields_, null);
};
goog.inherits(proto.io.iohk.nodenew.DIDData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.DIDData.displayName = 'proto.io.iohk.nodenew.DIDData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.CredentialData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.CredentialData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.CredentialData.displayName = 'proto.io.iohk.nodenew.CredentialData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.GetDidDocumentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.GetDidDocumentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.GetDidDocumentRequest.displayName = 'proto.io.iohk.nodenew.GetDidDocumentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.GetDidDocumentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.GetDidDocumentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.GetDidDocumentResponse.displayName = 'proto.io.iohk.nodenew.GetDidDocumentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.CreateDIDOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.CreateDIDOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.CreateDIDOperation.displayName = 'proto.io.iohk.nodenew.CreateDIDOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.CreateDIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.CreateDIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.CreateDIDResponse.displayName = 'proto.io.iohk.nodenew.CreateDIDResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.AddKeyAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.AddKeyAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.AddKeyAction.displayName = 'proto.io.iohk.nodenew.AddKeyAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.RemoveKeyAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.RemoveKeyAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.RemoveKeyAction.displayName = 'proto.io.iohk.nodenew.RemoveKeyAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.UpdateDIDAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.iohk.nodenew.UpdateDIDAction.oneofGroups_);
};
goog.inherits(proto.io.iohk.nodenew.UpdateDIDAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.UpdateDIDAction.displayName = 'proto.io.iohk.nodenew.UpdateDIDAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.UpdateDIDOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.iohk.nodenew.UpdateDIDOperation.repeatedFields_, null);
};
goog.inherits(proto.io.iohk.nodenew.UpdateDIDOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.UpdateDIDOperation.displayName = 'proto.io.iohk.nodenew.UpdateDIDOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.UpdateDIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.UpdateDIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.UpdateDIDResponse.displayName = 'proto.io.iohk.nodenew.UpdateDIDResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.IssueCredentialOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.IssueCredentialOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.IssueCredentialOperation.displayName = 'proto.io.iohk.nodenew.IssueCredentialOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.IssueCredentialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.IssueCredentialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.IssueCredentialResponse.displayName = 'proto.io.iohk.nodenew.IssueCredentialResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.RevokeCredentialOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.RevokeCredentialOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.RevokeCredentialOperation.displayName = 'proto.io.iohk.nodenew.RevokeCredentialOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.RevokeCredentialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.RevokeCredentialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.RevokeCredentialResponse.displayName = 'proto.io.iohk.nodenew.RevokeCredentialResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.AtalaOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.iohk.nodenew.AtalaOperation.oneofGroups_);
};
goog.inherits(proto.io.iohk.nodenew.AtalaOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.AtalaOperation.displayName = 'proto.io.iohk.nodenew.AtalaOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.iohk.nodenew.SignedAtalaOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.iohk.nodenew.SignedAtalaOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.iohk.nodenew.SignedAtalaOperation.displayName = 'proto.io.iohk.nodenew.SignedAtalaOperation';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.Date.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.Date.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.Date} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.Date.toObject = function(includeInstance, msg) {
  var f, obj = {
    year: jspb.Message.getFieldWithDefault(msg, 1, 0),
    month: jspb.Message.getFieldWithDefault(msg, 2, 0),
    day: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.Date}
 */
proto.io.iohk.nodenew.Date.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.Date;
  return proto.io.iohk.nodenew.Date.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.Date} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.Date}
 */
proto.io.iohk.nodenew.Date.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYear(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMonth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.Date.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.Date.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.Date} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.Date.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYear();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMonth();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 year = 1;
 * @return {number}
 */
proto.io.iohk.nodenew.Date.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.iohk.nodenew.Date} returns this
 */
proto.io.iohk.nodenew.Date.prototype.setYear = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 month = 2;
 * @return {number}
 */
proto.io.iohk.nodenew.Date.prototype.getMonth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.iohk.nodenew.Date} returns this
 */
proto.io.iohk.nodenew.Date.prototype.setMonth = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 day = 3;
 * @return {number}
 */
proto.io.iohk.nodenew.Date.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.iohk.nodenew.Date} returns this
 */
proto.io.iohk.nodenew.Date.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.ECKeyData.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.ECKeyData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.ECKeyData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.ECKeyData.toObject = function(includeInstance, msg) {
  var f, obj = {
    curve: jspb.Message.getFieldWithDefault(msg, 1, ""),
    x: msg.getX_asB64(),
    y: msg.getY_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.ECKeyData}
 */
proto.io.iohk.nodenew.ECKeyData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.ECKeyData;
  return proto.io.iohk.nodenew.ECKeyData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.ECKeyData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.ECKeyData}
 */
proto.io.iohk.nodenew.ECKeyData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurve(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setX(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.ECKeyData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.ECKeyData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.ECKeyData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.ECKeyData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurve();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getX_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getY_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string curve = 1;
 * @return {string}
 */
proto.io.iohk.nodenew.ECKeyData.prototype.getCurve = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.ECKeyData} returns this
 */
proto.io.iohk.nodenew.ECKeyData.prototype.setCurve = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes x = 2;
 * @return {string}
 */
proto.io.iohk.nodenew.ECKeyData.prototype.getX = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes x = 2;
 * This is a type-conversion wrapper around `getX()`
 * @return {string}
 */
proto.io.iohk.nodenew.ECKeyData.prototype.getX_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getX()));
};


/**
 * optional bytes x = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getX()`
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.ECKeyData.prototype.getX_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getX()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.nodenew.ECKeyData} returns this
 */
proto.io.iohk.nodenew.ECKeyData.prototype.setX = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes y = 3;
 * @return {string}
 */
proto.io.iohk.nodenew.ECKeyData.prototype.getY = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes y = 3;
 * This is a type-conversion wrapper around `getY()`
 * @return {string}
 */
proto.io.iohk.nodenew.ECKeyData.prototype.getY_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getY()));
};


/**
 * optional bytes y = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getY()`
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.ECKeyData.prototype.getY_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getY()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.nodenew.ECKeyData} returns this
 */
proto.io.iohk.nodenew.ECKeyData.prototype.setY = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.iohk.nodenew.PublicKey.oneofGroups_ = [[8]];

/**
 * @enum {number}
 */
proto.io.iohk.nodenew.PublicKey.KeydataCase = {
  KEYDATA_NOT_SET: 0,
  ECKEYDATA: 8
};

/**
 * @return {proto.io.iohk.nodenew.PublicKey.KeydataCase}
 */
proto.io.iohk.nodenew.PublicKey.prototype.getKeydataCase = function() {
  return /** @type {proto.io.iohk.nodenew.PublicKey.KeydataCase} */(jspb.Message.computeOneofCase(this, proto.io.iohk.nodenew.PublicKey.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.PublicKey.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.PublicKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.PublicKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.PublicKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    eckeydata: (f = msg.getEckeydata()) && proto.io.iohk.nodenew.ECKeyData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.PublicKey}
 */
proto.io.iohk.nodenew.PublicKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.PublicKey;
  return proto.io.iohk.nodenew.PublicKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.PublicKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.PublicKey}
 */
proto.io.iohk.nodenew.PublicKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.io.iohk.nodenew.KeyUsage} */ (reader.readEnum());
      msg.setUsage(value);
      break;
    case 8:
      var value = new proto.io.iohk.nodenew.ECKeyData;
      reader.readMessage(value,proto.io.iohk.nodenew.ECKeyData.deserializeBinaryFromReader);
      msg.setEckeydata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.PublicKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.PublicKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.PublicKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.PublicKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsage();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getEckeydata();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.io.iohk.nodenew.ECKeyData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.iohk.nodenew.PublicKey.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.PublicKey} returns this
 */
proto.io.iohk.nodenew.PublicKey.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional KeyUsage usage = 2;
 * @return {!proto.io.iohk.nodenew.KeyUsage}
 */
proto.io.iohk.nodenew.PublicKey.prototype.getUsage = function() {
  return /** @type {!proto.io.iohk.nodenew.KeyUsage} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.io.iohk.nodenew.KeyUsage} value
 * @return {!proto.io.iohk.nodenew.PublicKey} returns this
 */
proto.io.iohk.nodenew.PublicKey.prototype.setUsage = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ECKeyData ecKeyData = 8;
 * @return {?proto.io.iohk.nodenew.ECKeyData}
 */
proto.io.iohk.nodenew.PublicKey.prototype.getEckeydata = function() {
  return /** @type{?proto.io.iohk.nodenew.ECKeyData} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.ECKeyData, 8));
};


/**
 * @param {?proto.io.iohk.nodenew.ECKeyData|undefined} value
 * @return {!proto.io.iohk.nodenew.PublicKey} returns this
*/
proto.io.iohk.nodenew.PublicKey.prototype.setEckeydata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.io.iohk.nodenew.PublicKey.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.PublicKey} returns this
 */
proto.io.iohk.nodenew.PublicKey.prototype.clearEckeydata = function() {
  return this.setEckeydata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.PublicKey.prototype.hasEckeydata = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.iohk.nodenew.DIDData.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.DIDData.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.DIDData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.DIDData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.DIDData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    publickeysList: jspb.Message.toObjectList(msg.getPublickeysList(),
    proto.io.iohk.nodenew.PublicKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.DIDData}
 */
proto.io.iohk.nodenew.DIDData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.DIDData;
  return proto.io.iohk.nodenew.DIDData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.DIDData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.DIDData}
 */
proto.io.iohk.nodenew.DIDData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.io.iohk.nodenew.PublicKey;
      reader.readMessage(value,proto.io.iohk.nodenew.PublicKey.deserializeBinaryFromReader);
      msg.addPublickeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.DIDData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.DIDData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.DIDData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.DIDData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPublickeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.io.iohk.nodenew.PublicKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.iohk.nodenew.DIDData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.DIDData} returns this
 */
proto.io.iohk.nodenew.DIDData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PublicKey publicKeys = 2;
 * @return {!Array<!proto.io.iohk.nodenew.PublicKey>}
 */
proto.io.iohk.nodenew.DIDData.prototype.getPublickeysList = function() {
  return /** @type{!Array<!proto.io.iohk.nodenew.PublicKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.iohk.nodenew.PublicKey, 2));
};


/**
 * @param {!Array<!proto.io.iohk.nodenew.PublicKey>} value
 * @return {!proto.io.iohk.nodenew.DIDData} returns this
*/
proto.io.iohk.nodenew.DIDData.prototype.setPublickeysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.io.iohk.nodenew.PublicKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.iohk.nodenew.PublicKey}
 */
proto.io.iohk.nodenew.DIDData.prototype.addPublickeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.io.iohk.nodenew.PublicKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.iohk.nodenew.DIDData} returns this
 */
proto.io.iohk.nodenew.DIDData.prototype.clearPublickeysList = function() {
  return this.setPublickeysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.CredentialData.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.CredentialData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.CredentialData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.CredentialData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    issuer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contenthash: msg.getContenthash_asB64(),
    issuancedate: (f = msg.getIssuancedate()) && proto.io.iohk.nodenew.Date.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.CredentialData}
 */
proto.io.iohk.nodenew.CredentialData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.CredentialData;
  return proto.io.iohk.nodenew.CredentialData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.CredentialData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.CredentialData}
 */
proto.io.iohk.nodenew.CredentialData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContenthash(value);
      break;
    case 4:
      var value = new proto.io.iohk.nodenew.Date;
      reader.readMessage(value,proto.io.iohk.nodenew.Date.deserializeBinaryFromReader);
      msg.setIssuancedate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.CredentialData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.CredentialData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.CredentialData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.CredentialData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContenthash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getIssuancedate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.iohk.nodenew.Date.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.iohk.nodenew.CredentialData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.CredentialData} returns this
 */
proto.io.iohk.nodenew.CredentialData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string issuer = 2;
 * @return {string}
 */
proto.io.iohk.nodenew.CredentialData.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.CredentialData} returns this
 */
proto.io.iohk.nodenew.CredentialData.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes contentHash = 3;
 * @return {string}
 */
proto.io.iohk.nodenew.CredentialData.prototype.getContenthash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes contentHash = 3;
 * This is a type-conversion wrapper around `getContenthash()`
 * @return {string}
 */
proto.io.iohk.nodenew.CredentialData.prototype.getContenthash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContenthash()));
};


/**
 * optional bytes contentHash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContenthash()`
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.CredentialData.prototype.getContenthash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContenthash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.nodenew.CredentialData} returns this
 */
proto.io.iohk.nodenew.CredentialData.prototype.setContenthash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional Date issuanceDate = 4;
 * @return {?proto.io.iohk.nodenew.Date}
 */
proto.io.iohk.nodenew.CredentialData.prototype.getIssuancedate = function() {
  return /** @type{?proto.io.iohk.nodenew.Date} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.Date, 4));
};


/**
 * @param {?proto.io.iohk.nodenew.Date|undefined} value
 * @return {!proto.io.iohk.nodenew.CredentialData} returns this
*/
proto.io.iohk.nodenew.CredentialData.prototype.setIssuancedate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.CredentialData} returns this
 */
proto.io.iohk.nodenew.CredentialData.prototype.clearIssuancedate = function() {
  return this.setIssuancedate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.CredentialData.prototype.hasIssuancedate = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.GetDidDocumentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.GetDidDocumentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.GetDidDocumentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.GetDidDocumentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.GetDidDocumentRequest}
 */
proto.io.iohk.nodenew.GetDidDocumentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.GetDidDocumentRequest;
  return proto.io.iohk.nodenew.GetDidDocumentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.GetDidDocumentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.GetDidDocumentRequest}
 */
proto.io.iohk.nodenew.GetDidDocumentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.GetDidDocumentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.GetDidDocumentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.GetDidDocumentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.GetDidDocumentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string did = 1;
 * @return {string}
 */
proto.io.iohk.nodenew.GetDidDocumentRequest.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.GetDidDocumentRequest} returns this
 */
proto.io.iohk.nodenew.GetDidDocumentRequest.prototype.setDid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.GetDidDocumentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.GetDidDocumentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.GetDidDocumentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.GetDidDocumentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    document: (f = msg.getDocument()) && proto.io.iohk.nodenew.DIDData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.GetDidDocumentResponse}
 */
proto.io.iohk.nodenew.GetDidDocumentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.GetDidDocumentResponse;
  return proto.io.iohk.nodenew.GetDidDocumentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.GetDidDocumentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.GetDidDocumentResponse}
 */
proto.io.iohk.nodenew.GetDidDocumentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.iohk.nodenew.DIDData;
      reader.readMessage(value,proto.io.iohk.nodenew.DIDData.deserializeBinaryFromReader);
      msg.setDocument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.GetDidDocumentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.GetDidDocumentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.GetDidDocumentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.GetDidDocumentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.iohk.nodenew.DIDData.serializeBinaryToWriter
    );
  }
};


/**
 * optional DIDData document = 1;
 * @return {?proto.io.iohk.nodenew.DIDData}
 */
proto.io.iohk.nodenew.GetDidDocumentResponse.prototype.getDocument = function() {
  return /** @type{?proto.io.iohk.nodenew.DIDData} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.DIDData, 1));
};


/**
 * @param {?proto.io.iohk.nodenew.DIDData|undefined} value
 * @return {!proto.io.iohk.nodenew.GetDidDocumentResponse} returns this
*/
proto.io.iohk.nodenew.GetDidDocumentResponse.prototype.setDocument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.GetDidDocumentResponse} returns this
 */
proto.io.iohk.nodenew.GetDidDocumentResponse.prototype.clearDocument = function() {
  return this.setDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.GetDidDocumentResponse.prototype.hasDocument = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.CreateDIDOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.CreateDIDOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.CreateDIDOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.CreateDIDOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    diddata: (f = msg.getDiddata()) && proto.io.iohk.nodenew.DIDData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.CreateDIDOperation}
 */
proto.io.iohk.nodenew.CreateDIDOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.CreateDIDOperation;
  return proto.io.iohk.nodenew.CreateDIDOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.CreateDIDOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.CreateDIDOperation}
 */
proto.io.iohk.nodenew.CreateDIDOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.iohk.nodenew.DIDData;
      reader.readMessage(value,proto.io.iohk.nodenew.DIDData.deserializeBinaryFromReader);
      msg.setDiddata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.CreateDIDOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.CreateDIDOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.CreateDIDOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.CreateDIDOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDiddata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.iohk.nodenew.DIDData.serializeBinaryToWriter
    );
  }
};


/**
 * optional DIDData didData = 1;
 * @return {?proto.io.iohk.nodenew.DIDData}
 */
proto.io.iohk.nodenew.CreateDIDOperation.prototype.getDiddata = function() {
  return /** @type{?proto.io.iohk.nodenew.DIDData} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.DIDData, 1));
};


/**
 * @param {?proto.io.iohk.nodenew.DIDData|undefined} value
 * @return {!proto.io.iohk.nodenew.CreateDIDOperation} returns this
*/
proto.io.iohk.nodenew.CreateDIDOperation.prototype.setDiddata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.CreateDIDOperation} returns this
 */
proto.io.iohk.nodenew.CreateDIDOperation.prototype.clearDiddata = function() {
  return this.setDiddata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.CreateDIDOperation.prototype.hasDiddata = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.CreateDIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.CreateDIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.CreateDIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.CreateDIDResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.CreateDIDResponse}
 */
proto.io.iohk.nodenew.CreateDIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.CreateDIDResponse;
  return proto.io.iohk.nodenew.CreateDIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.CreateDIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.CreateDIDResponse}
 */
proto.io.iohk.nodenew.CreateDIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.CreateDIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.CreateDIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.CreateDIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.CreateDIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.iohk.nodenew.CreateDIDResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.CreateDIDResponse} returns this
 */
proto.io.iohk.nodenew.CreateDIDResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.AddKeyAction.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.AddKeyAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.AddKeyAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.AddKeyAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && proto.io.iohk.nodenew.PublicKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.AddKeyAction}
 */
proto.io.iohk.nodenew.AddKeyAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.AddKeyAction;
  return proto.io.iohk.nodenew.AddKeyAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.AddKeyAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.AddKeyAction}
 */
proto.io.iohk.nodenew.AddKeyAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.iohk.nodenew.PublicKey;
      reader.readMessage(value,proto.io.iohk.nodenew.PublicKey.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.AddKeyAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.AddKeyAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.AddKeyAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.AddKeyAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.iohk.nodenew.PublicKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional PublicKey key = 1;
 * @return {?proto.io.iohk.nodenew.PublicKey}
 */
proto.io.iohk.nodenew.AddKeyAction.prototype.getKey = function() {
  return /** @type{?proto.io.iohk.nodenew.PublicKey} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.PublicKey, 1));
};


/**
 * @param {?proto.io.iohk.nodenew.PublicKey|undefined} value
 * @return {!proto.io.iohk.nodenew.AddKeyAction} returns this
*/
proto.io.iohk.nodenew.AddKeyAction.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.AddKeyAction} returns this
 */
proto.io.iohk.nodenew.AddKeyAction.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.AddKeyAction.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.RemoveKeyAction.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.RemoveKeyAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.RemoveKeyAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.RemoveKeyAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.RemoveKeyAction}
 */
proto.io.iohk.nodenew.RemoveKeyAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.RemoveKeyAction;
  return proto.io.iohk.nodenew.RemoveKeyAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.RemoveKeyAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.RemoveKeyAction}
 */
proto.io.iohk.nodenew.RemoveKeyAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.RemoveKeyAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.RemoveKeyAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.RemoveKeyAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.RemoveKeyAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string keyId = 1;
 * @return {string}
 */
proto.io.iohk.nodenew.RemoveKeyAction.prototype.getKeyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.RemoveKeyAction} returns this
 */
proto.io.iohk.nodenew.RemoveKeyAction.prototype.setKeyid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.iohk.nodenew.UpdateDIDAction.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.io.iohk.nodenew.UpdateDIDAction.ActionCase = {
  ACTION_NOT_SET: 0,
  ADDKEY: 1,
  REMOVEKEY: 2
};

/**
 * @return {proto.io.iohk.nodenew.UpdateDIDAction.ActionCase}
 */
proto.io.iohk.nodenew.UpdateDIDAction.prototype.getActionCase = function() {
  return /** @type {proto.io.iohk.nodenew.UpdateDIDAction.ActionCase} */(jspb.Message.computeOneofCase(this, proto.io.iohk.nodenew.UpdateDIDAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.UpdateDIDAction.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.UpdateDIDAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.UpdateDIDAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.UpdateDIDAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    addkey: (f = msg.getAddkey()) && proto.io.iohk.nodenew.AddKeyAction.toObject(includeInstance, f),
    removekey: (f = msg.getRemovekey()) && proto.io.iohk.nodenew.RemoveKeyAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.UpdateDIDAction}
 */
proto.io.iohk.nodenew.UpdateDIDAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.UpdateDIDAction;
  return proto.io.iohk.nodenew.UpdateDIDAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.UpdateDIDAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.UpdateDIDAction}
 */
proto.io.iohk.nodenew.UpdateDIDAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.iohk.nodenew.AddKeyAction;
      reader.readMessage(value,proto.io.iohk.nodenew.AddKeyAction.deserializeBinaryFromReader);
      msg.setAddkey(value);
      break;
    case 2:
      var value = new proto.io.iohk.nodenew.RemoveKeyAction;
      reader.readMessage(value,proto.io.iohk.nodenew.RemoveKeyAction.deserializeBinaryFromReader);
      msg.setRemovekey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.UpdateDIDAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.UpdateDIDAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.UpdateDIDAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.UpdateDIDAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddkey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.iohk.nodenew.AddKeyAction.serializeBinaryToWriter
    );
  }
  f = message.getRemovekey();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.iohk.nodenew.RemoveKeyAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional AddKeyAction addKey = 1;
 * @return {?proto.io.iohk.nodenew.AddKeyAction}
 */
proto.io.iohk.nodenew.UpdateDIDAction.prototype.getAddkey = function() {
  return /** @type{?proto.io.iohk.nodenew.AddKeyAction} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.AddKeyAction, 1));
};


/**
 * @param {?proto.io.iohk.nodenew.AddKeyAction|undefined} value
 * @return {!proto.io.iohk.nodenew.UpdateDIDAction} returns this
*/
proto.io.iohk.nodenew.UpdateDIDAction.prototype.setAddkey = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.iohk.nodenew.UpdateDIDAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.UpdateDIDAction} returns this
 */
proto.io.iohk.nodenew.UpdateDIDAction.prototype.clearAddkey = function() {
  return this.setAddkey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.UpdateDIDAction.prototype.hasAddkey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RemoveKeyAction removeKey = 2;
 * @return {?proto.io.iohk.nodenew.RemoveKeyAction}
 */
proto.io.iohk.nodenew.UpdateDIDAction.prototype.getRemovekey = function() {
  return /** @type{?proto.io.iohk.nodenew.RemoveKeyAction} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.RemoveKeyAction, 2));
};


/**
 * @param {?proto.io.iohk.nodenew.RemoveKeyAction|undefined} value
 * @return {!proto.io.iohk.nodenew.UpdateDIDAction} returns this
*/
proto.io.iohk.nodenew.UpdateDIDAction.prototype.setRemovekey = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.iohk.nodenew.UpdateDIDAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.UpdateDIDAction} returns this
 */
proto.io.iohk.nodenew.UpdateDIDAction.prototype.clearRemovekey = function() {
  return this.setRemovekey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.UpdateDIDAction.prototype.hasRemovekey = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.iohk.nodenew.UpdateDIDOperation.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.UpdateDIDOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.UpdateDIDOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.UpdateDIDOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.UpdateDIDOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.io.iohk.nodenew.UpdateDIDAction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.UpdateDIDOperation}
 */
proto.io.iohk.nodenew.UpdateDIDOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.UpdateDIDOperation;
  return proto.io.iohk.nodenew.UpdateDIDOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.UpdateDIDOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.UpdateDIDOperation}
 */
proto.io.iohk.nodenew.UpdateDIDOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.io.iohk.nodenew.UpdateDIDAction;
      reader.readMessage(value,proto.io.iohk.nodenew.UpdateDIDAction.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.UpdateDIDOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.UpdateDIDOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.UpdateDIDOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.UpdateDIDOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.io.iohk.nodenew.UpdateDIDAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.iohk.nodenew.UpdateDIDOperation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.UpdateDIDOperation} returns this
 */
proto.io.iohk.nodenew.UpdateDIDOperation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated UpdateDIDAction actions = 2;
 * @return {!Array<!proto.io.iohk.nodenew.UpdateDIDAction>}
 */
proto.io.iohk.nodenew.UpdateDIDOperation.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.io.iohk.nodenew.UpdateDIDAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.iohk.nodenew.UpdateDIDAction, 2));
};


/**
 * @param {!Array<!proto.io.iohk.nodenew.UpdateDIDAction>} value
 * @return {!proto.io.iohk.nodenew.UpdateDIDOperation} returns this
*/
proto.io.iohk.nodenew.UpdateDIDOperation.prototype.setActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.io.iohk.nodenew.UpdateDIDAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.iohk.nodenew.UpdateDIDAction}
 */
proto.io.iohk.nodenew.UpdateDIDOperation.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.io.iohk.nodenew.UpdateDIDAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.iohk.nodenew.UpdateDIDOperation} returns this
 */
proto.io.iohk.nodenew.UpdateDIDOperation.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.UpdateDIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.UpdateDIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.UpdateDIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.UpdateDIDResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.UpdateDIDResponse}
 */
proto.io.iohk.nodenew.UpdateDIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.UpdateDIDResponse;
  return proto.io.iohk.nodenew.UpdateDIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.UpdateDIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.UpdateDIDResponse}
 */
proto.io.iohk.nodenew.UpdateDIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.UpdateDIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.UpdateDIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.UpdateDIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.UpdateDIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.IssueCredentialOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.IssueCredentialOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.IssueCredentialOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.IssueCredentialOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialdata: (f = msg.getCredentialdata()) && proto.io.iohk.nodenew.CredentialData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.IssueCredentialOperation}
 */
proto.io.iohk.nodenew.IssueCredentialOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.IssueCredentialOperation;
  return proto.io.iohk.nodenew.IssueCredentialOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.IssueCredentialOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.IssueCredentialOperation}
 */
proto.io.iohk.nodenew.IssueCredentialOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.iohk.nodenew.CredentialData;
      reader.readMessage(value,proto.io.iohk.nodenew.CredentialData.deserializeBinaryFromReader);
      msg.setCredentialdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.IssueCredentialOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.IssueCredentialOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.IssueCredentialOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.IssueCredentialOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialdata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.iohk.nodenew.CredentialData.serializeBinaryToWriter
    );
  }
};


/**
 * optional CredentialData credentialData = 1;
 * @return {?proto.io.iohk.nodenew.CredentialData}
 */
proto.io.iohk.nodenew.IssueCredentialOperation.prototype.getCredentialdata = function() {
  return /** @type{?proto.io.iohk.nodenew.CredentialData} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.CredentialData, 1));
};


/**
 * @param {?proto.io.iohk.nodenew.CredentialData|undefined} value
 * @return {!proto.io.iohk.nodenew.IssueCredentialOperation} returns this
*/
proto.io.iohk.nodenew.IssueCredentialOperation.prototype.setCredentialdata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.IssueCredentialOperation} returns this
 */
proto.io.iohk.nodenew.IssueCredentialOperation.prototype.clearCredentialdata = function() {
  return this.setCredentialdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.IssueCredentialOperation.prototype.hasCredentialdata = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.IssueCredentialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.IssueCredentialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.IssueCredentialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.IssueCredentialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.IssueCredentialResponse}
 */
proto.io.iohk.nodenew.IssueCredentialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.IssueCredentialResponse;
  return proto.io.iohk.nodenew.IssueCredentialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.IssueCredentialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.IssueCredentialResponse}
 */
proto.io.iohk.nodenew.IssueCredentialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.IssueCredentialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.IssueCredentialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.IssueCredentialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.IssueCredentialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.iohk.nodenew.IssueCredentialResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.IssueCredentialResponse} returns this
 */
proto.io.iohk.nodenew.IssueCredentialResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.RevokeCredentialOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.RevokeCredentialOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    previousoperationhash: msg.getPreviousoperationhash_asB64(),
    credentialid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    revocationdate: (f = msg.getRevocationdate()) && proto.io.iohk.nodenew.Date.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.RevokeCredentialOperation}
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.RevokeCredentialOperation;
  return proto.io.iohk.nodenew.RevokeCredentialOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.RevokeCredentialOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.RevokeCredentialOperation}
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreviousoperationhash(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialid(value);
      break;
    case 3:
      var value = new proto.io.iohk.nodenew.Date;
      reader.readMessage(value,proto.io.iohk.nodenew.Date.deserializeBinaryFromReader);
      msg.setRevocationdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.RevokeCredentialOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.RevokeCredentialOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPreviousoperationhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getCredentialid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRevocationdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.iohk.nodenew.Date.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes previousOperationHash = 1;
 * @return {string}
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.getPreviousoperationhash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes previousOperationHash = 1;
 * This is a type-conversion wrapper around `getPreviousoperationhash()`
 * @return {string}
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.getPreviousoperationhash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreviousoperationhash()));
};


/**
 * optional bytes previousOperationHash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreviousoperationhash()`
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.getPreviousoperationhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreviousoperationhash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.nodenew.RevokeCredentialOperation} returns this
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.setPreviousoperationhash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string credentialId = 2;
 * @return {string}
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.getCredentialid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.RevokeCredentialOperation} returns this
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.setCredentialid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Date revocationDate = 3;
 * @return {?proto.io.iohk.nodenew.Date}
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.getRevocationdate = function() {
  return /** @type{?proto.io.iohk.nodenew.Date} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.Date, 3));
};


/**
 * @param {?proto.io.iohk.nodenew.Date|undefined} value
 * @return {!proto.io.iohk.nodenew.RevokeCredentialOperation} returns this
*/
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.setRevocationdate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.RevokeCredentialOperation} returns this
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.clearRevocationdate = function() {
  return this.setRevocationdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.RevokeCredentialOperation.prototype.hasRevocationdate = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.RevokeCredentialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.RevokeCredentialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.RevokeCredentialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.RevokeCredentialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.RevokeCredentialResponse}
 */
proto.io.iohk.nodenew.RevokeCredentialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.RevokeCredentialResponse;
  return proto.io.iohk.nodenew.RevokeCredentialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.RevokeCredentialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.RevokeCredentialResponse}
 */
proto.io.iohk.nodenew.RevokeCredentialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.RevokeCredentialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.RevokeCredentialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.RevokeCredentialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.RevokeCredentialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.iohk.nodenew.AtalaOperation.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.io.iohk.nodenew.AtalaOperation.OperationCase = {
  OPERATION_NOT_SET: 0,
  CREATEDID: 1,
  UPDATEDID: 2,
  ISSUECREDENTIAL: 3,
  REVOKECREDENTIAL: 4
};

/**
 * @return {proto.io.iohk.nodenew.AtalaOperation.OperationCase}
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.getOperationCase = function() {
  return /** @type {proto.io.iohk.nodenew.AtalaOperation.OperationCase} */(jspb.Message.computeOneofCase(this, proto.io.iohk.nodenew.AtalaOperation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.AtalaOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.AtalaOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.AtalaOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdid: (f = msg.getCreatedid()) && proto.io.iohk.nodenew.CreateDIDOperation.toObject(includeInstance, f),
    updatedid: (f = msg.getUpdatedid()) && proto.io.iohk.nodenew.UpdateDIDOperation.toObject(includeInstance, f),
    issuecredential: (f = msg.getIssuecredential()) && proto.io.iohk.nodenew.IssueCredentialOperation.toObject(includeInstance, f),
    revokecredential: (f = msg.getRevokecredential()) && proto.io.iohk.nodenew.RevokeCredentialOperation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.AtalaOperation}
 */
proto.io.iohk.nodenew.AtalaOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.AtalaOperation;
  return proto.io.iohk.nodenew.AtalaOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.AtalaOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.AtalaOperation}
 */
proto.io.iohk.nodenew.AtalaOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.iohk.nodenew.CreateDIDOperation;
      reader.readMessage(value,proto.io.iohk.nodenew.CreateDIDOperation.deserializeBinaryFromReader);
      msg.setCreatedid(value);
      break;
    case 2:
      var value = new proto.io.iohk.nodenew.UpdateDIDOperation;
      reader.readMessage(value,proto.io.iohk.nodenew.UpdateDIDOperation.deserializeBinaryFromReader);
      msg.setUpdatedid(value);
      break;
    case 3:
      var value = new proto.io.iohk.nodenew.IssueCredentialOperation;
      reader.readMessage(value,proto.io.iohk.nodenew.IssueCredentialOperation.deserializeBinaryFromReader);
      msg.setIssuecredential(value);
      break;
    case 4:
      var value = new proto.io.iohk.nodenew.RevokeCredentialOperation;
      reader.readMessage(value,proto.io.iohk.nodenew.RevokeCredentialOperation.deserializeBinaryFromReader);
      msg.setRevokecredential(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.AtalaOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.AtalaOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.AtalaOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.iohk.nodenew.CreateDIDOperation.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.iohk.nodenew.UpdateDIDOperation.serializeBinaryToWriter
    );
  }
  f = message.getIssuecredential();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.iohk.nodenew.IssueCredentialOperation.serializeBinaryToWriter
    );
  }
  f = message.getRevokecredential();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.iohk.nodenew.RevokeCredentialOperation.serializeBinaryToWriter
    );
  }
};


/**
 * optional CreateDIDOperation createDid = 1;
 * @return {?proto.io.iohk.nodenew.CreateDIDOperation}
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.getCreatedid = function() {
  return /** @type{?proto.io.iohk.nodenew.CreateDIDOperation} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.CreateDIDOperation, 1));
};


/**
 * @param {?proto.io.iohk.nodenew.CreateDIDOperation|undefined} value
 * @return {!proto.io.iohk.nodenew.AtalaOperation} returns this
*/
proto.io.iohk.nodenew.AtalaOperation.prototype.setCreatedid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.iohk.nodenew.AtalaOperation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.AtalaOperation} returns this
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.clearCreatedid = function() {
  return this.setCreatedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.hasCreatedid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UpdateDIDOperation updateDid = 2;
 * @return {?proto.io.iohk.nodenew.UpdateDIDOperation}
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.getUpdatedid = function() {
  return /** @type{?proto.io.iohk.nodenew.UpdateDIDOperation} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.UpdateDIDOperation, 2));
};


/**
 * @param {?proto.io.iohk.nodenew.UpdateDIDOperation|undefined} value
 * @return {!proto.io.iohk.nodenew.AtalaOperation} returns this
*/
proto.io.iohk.nodenew.AtalaOperation.prototype.setUpdatedid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.iohk.nodenew.AtalaOperation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.AtalaOperation} returns this
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.clearUpdatedid = function() {
  return this.setUpdatedid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.hasUpdatedid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional IssueCredentialOperation issueCredential = 3;
 * @return {?proto.io.iohk.nodenew.IssueCredentialOperation}
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.getIssuecredential = function() {
  return /** @type{?proto.io.iohk.nodenew.IssueCredentialOperation} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.IssueCredentialOperation, 3));
};


/**
 * @param {?proto.io.iohk.nodenew.IssueCredentialOperation|undefined} value
 * @return {!proto.io.iohk.nodenew.AtalaOperation} returns this
*/
proto.io.iohk.nodenew.AtalaOperation.prototype.setIssuecredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.iohk.nodenew.AtalaOperation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.AtalaOperation} returns this
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.clearIssuecredential = function() {
  return this.setIssuecredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.hasIssuecredential = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RevokeCredentialOperation revokeCredential = 4;
 * @return {?proto.io.iohk.nodenew.RevokeCredentialOperation}
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.getRevokecredential = function() {
  return /** @type{?proto.io.iohk.nodenew.RevokeCredentialOperation} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.RevokeCredentialOperation, 4));
};


/**
 * @param {?proto.io.iohk.nodenew.RevokeCredentialOperation|undefined} value
 * @return {!proto.io.iohk.nodenew.AtalaOperation} returns this
*/
proto.io.iohk.nodenew.AtalaOperation.prototype.setRevokecredential = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.iohk.nodenew.AtalaOperation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.AtalaOperation} returns this
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.clearRevokecredential = function() {
  return this.setRevokecredential(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.AtalaOperation.prototype.hasRevokecredential = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.io.iohk.nodenew.SignedAtalaOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.iohk.nodenew.SignedAtalaOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.SignedAtalaOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    signedwith: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signature: msg.getSignature_asB64(),
    operation: (f = msg.getOperation()) && proto.io.iohk.nodenew.AtalaOperation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.iohk.nodenew.SignedAtalaOperation}
 */
proto.io.iohk.nodenew.SignedAtalaOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.iohk.nodenew.SignedAtalaOperation;
  return proto.io.iohk.nodenew.SignedAtalaOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.iohk.nodenew.SignedAtalaOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.iohk.nodenew.SignedAtalaOperation}
 */
proto.io.iohk.nodenew.SignedAtalaOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignedwith(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 3:
      var value = new proto.io.iohk.nodenew.AtalaOperation;
      reader.readMessage(value,proto.io.iohk.nodenew.AtalaOperation.deserializeBinaryFromReader);
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.iohk.nodenew.SignedAtalaOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.iohk.nodenew.SignedAtalaOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.iohk.nodenew.SignedAtalaOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignedwith();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getOperation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.iohk.nodenew.AtalaOperation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string signedWith = 1;
 * @return {string}
 */
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.getSignedwith = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.iohk.nodenew.SignedAtalaOperation} returns this
 */
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.setSignedwith = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes signature = 2;
 * @return {string}
 */
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes signature = 2;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.iohk.nodenew.SignedAtalaOperation} returns this
 */
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional AtalaOperation operation = 3;
 * @return {?proto.io.iohk.nodenew.AtalaOperation}
 */
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.getOperation = function() {
  return /** @type{?proto.io.iohk.nodenew.AtalaOperation} */ (
    jspb.Message.getWrapperField(this, proto.io.iohk.nodenew.AtalaOperation, 3));
};


/**
 * @param {?proto.io.iohk.nodenew.AtalaOperation|undefined} value
 * @return {!proto.io.iohk.nodenew.SignedAtalaOperation} returns this
*/
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.setOperation = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.iohk.nodenew.SignedAtalaOperation} returns this
 */
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.clearOperation = function() {
  return this.setOperation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.iohk.nodenew.SignedAtalaOperation.prototype.hasOperation = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.io.iohk.nodenew.KeyUsage = {
  UNKNOWN_KEY: 0,
  MASTER_KEY: 1,
  ISSUING_KEY: 2,
  COMMUNICATION_KEY: 3,
  AUTHENTICATION_KEY: 4
};

goog.object.extend(exports, proto.io.iohk.nodenew);
