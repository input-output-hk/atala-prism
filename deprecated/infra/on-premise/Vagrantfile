NOMAD_SERVERS = {
	:number => 1,
	:cpus => "1",
	:ram => 512,
	:ip_offset => 100,
	:type => "server"
}
NOMAD_CLIENTS = {
	:number => 1,
	:cpus => "4",
	:ram => 8192,
	:ip_offset => 200,
	:type => "client",
}
def nomadSetup(target, config)
	(1..target[:number]).each do |target_id|
		target_name = "nomad-#{target[:type]}-#{target_id}"
		config.vm.define target_name do |server|
			server.vm.provider "virtualbox" do |vb|
				vb.name = target_name
				vb.customize ["modifyvm", :id, "--cpus", target[:cpus]]
				vb.customize ["modifyvm", :id, "--memory", target[:ram]]
			end
			if target_id == 1 && target[:type] == "server"
				# Expose the nomad ports
				server.vm.network "forwarded_port", guest: 4646, host: 4646, auto_correct: true
				# Expose the consul ports
				server.vm.network "forwarded_port", guest: 8500, host: 8500, auto_correct: true
			end
			if target[:type] == "client"
				# Expose ports
				server.vm.network "forwarded_port", guest: 8080, host: 8080, auto_correct: true
				server.vm.network "forwarded_port", guest: 8081, host: 8081, auto_correct: true
			end
			server.vm.hostname = target_name
			server.vm.network :private_network, ip: "10.1.42.#{target_id+target[:ip_offset]}"
			if target_id == target[:number] && target[:type] == "client"
				server.vm.provision "ansible" do |ansible|
					ansible.playbook = "vagrant.yml"
					ansible.inventory_path = "vagrant_hosts.ini"
					ansible.limit = "all"
				end
			end
		end
	end
end
# Nomad and Consul Clusters
Vagrant.configure(2) do |config|
	config.vm.box = "generic/ubuntu2004" # 20.04 LTS
	# 1-node Consul and Nomad
	nomadSetup(NOMAD_SERVERS, config)
	# 1-node Nomad Client
	nomadSetup(NOMAD_CLIENTS, config)
end
