apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "io.iohk.cvp"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 5
        versionName "0.1.7"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField "String", "API_BASE_URL", API_BASE_URL_DEV
            buildConfigField "Integer", "API_PORT", API_PORT_DEV
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "API_BASE_URL", API_BASE_URL_PROD
            buildConfigField "Integer", "API_PORT", API_PORT_PROD
        }
    }
    sourceSets {
        main {
            proto {
                srcDir 'src/main/proto'
            }
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    aaptOptions { cruncherEnabled = false }
    lintOptions {
        lintConfig file("lint.xml")
    }
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.9.0' }
    plugins {
        javalite { artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0" }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.23.0' // CURRENT_GRPC_VERSION
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc { // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

ext {
    daggerVersion = '2.21'
    butterKnifeVersion = '10.2.0'
    espressoVersion = '3.2.0'
}

def injectionDependencies = [
        butterKnifeCompiler   : [
                type: "implementation",
                dep : "com.jakewharton:butterknife:$butterKnifeVersion"
        ],
        butterKnifeAnnotation : [
                type: "annotationProcessor",
                dep : "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
        ],
        daggerCompiler        : [
                type: "implementation",
                dep : "com.google.dagger:dagger:$daggerVersion"
        ],
        daggerSupport         : [
                type: "implementation",
                dep : "com.google.dagger:dagger-android-support:$daggerVersion"
        ],
        daggerAnnotation      : [
                type: "annotationProcessor",
                dep : "com.google.dagger:dagger-compiler:$daggerVersion"
        ],
        daggerAndroidProcessor: [
                type: "annotationProcessor",
                dep : "com.google.dagger:dagger-android-processor:$daggerVersion"
        ]
]

def utilsDependencies = [
        androidSupportv4: [
                type: "implementation",
                dep : "androidx.legacy:legacy-support-v4:1.0.0"
        ]
]

def androidDependencies = [
        appcompat        : 'androidx.appcompat:appcompat:1.0.0',
        supportAnnotatios: 'androidx.annotation:annotation:1.0.0',
]

def testDependencies = [
        junit       : 'junit:junit:4.12',
        multidexTest: 'androidx.multidex:multidex-instrumentation:2.0.0',
        robotium    : 'com.jayway.android.robotium:robotium-solo:5.6.3',
]

def testCoreDependencies = [
        testCore  : "androidx.test:core:1.2.0",
        testRunner: "androidx.test:runner:1.2.0",
        testRules : "androidx.test:rules:1.2.0"
]

def espressoTestDependencies = [
        core            : "androidx.test.espresso:espresso-core:$espressoVersion",
        contrib         : "androidx.test.espresso:espresso-contrib:$espressoVersion",
        intents         : "androidx.test.espresso:espresso-intents:$espressoVersion",
        accessibility   : "androidx.test.espresso:espresso-accessibility:$espressoVersion",
        web             : "androidx.test.espresso:espresso-web:$espressoVersion",
        idlingConcurrent: "androidx.test.espresso.idling:idling-concurrent:$espressoVersion",
]


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'io.grpc:grpc-okhttp:1.23.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-protobuf-lite:1.23.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-stub:1.23.0' // CURRENT_GRPC_VERSION
    implementation 'javax.annotation:javax.annotation-api:1.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.android.material:material:1.1.0-alpha10'
    implementation 'de.hdodenhof:circleimageview:3.0.1'
    implementation 'com.madgag.spongycastle:core:1.58.0.0'
    implementation 'com.madgag.spongycastle:prov:1.58.0.0'
    implementation 'com.braintreepayments.api:drop-in:3.3.0'
    implementation "androidx.biometric:biometric:1.0.1"
    implementation('org.bitcoinj:bitcoinj-core:0.15.6') {
        exclude group: 'com.google.protobuf'
    }
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'

    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    androidDependencies.each { k, dep -> implementation dep }
    injectionDependencies.each { k, v -> "${v.type}" v.dep }
    utilsDependencies.each { k, v -> "${v.type}" v.dep }
    testDependencies.each { k, dep -> compile dep }
    testCoreDependencies.each { k, dep -> androidTestImplementation dep }
    espressoTestDependencies.each { k, dep -> androidTestImplementation dep }
}

apply plugin: 'com.google.gms.google-services'
