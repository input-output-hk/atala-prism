version: 2
jobs:
  build:
    docker:
      - image: openjdk:8
    working_directory: ~/repo
    steps:
      - run: mkdir -p /tmp/workspace

      - checkout

      - run:
          name: install coursier
          command: curl -L -o coursier https://git.io/vgvpD && chmod +x coursier

      - run:
          name: install scalafmt
          command: ./coursier bootstrap org.scalameta:scalafmt-cli_2.12:2.0.0-RC4 -r bintray:scalameta/maven -o scalafmt --main org.scalafmt.cli.Cli

      - run:
          name: install bazel-remote-proxy
          command: |
            # if go is already installed
            # go install github.com/notnoopci/bazel-remote-proxy

            # otherwise download latest artifact
            DOWNLOAD_URL="$(curl -sSL \
               https://circleci.com/api/v1.1/project/github/notnoopci/bazel-remote-proxy/latest/artifacts?branch=master \
               | grep -o -e "https://[^\"]*/bazel-remote-proxy-$(uname -s)_$(uname -m)" \
            )"

            curl -o ~/bazel-remote-proxy "$DOWNLOAD_URL"
            chmod +x ~/bazel-remote-proxy

      - run:
          name: install bazel
          command: ~/repo/docker/installBazel

      - run:
          name: setup bazel remote proxy
          command: ~/bazel-remote-proxy -backend circleci:// -bind localhost:7654
          background: true

      - run:
          name: build
          command: |
            bazel \
              --host_jvm_args=-Dbazel.DigestFunction=sha256 \
              test \
              --jobs=2 \
              --spawn_strategy=standalone \
              --strategy=Javac=standalone \
              --genrule_strategy=standalone \
              --remote_http_cache=http://localhost:7654 \
              //... --test_output=errors

      - run:
          name: check that the code is formatted properly
          command: ./scalafmt --test

      - run:
          name: create library jar
          command: bazel build //src/main/scala/io/iohk/cef/main:main_deploy.jar

      - run:
          name: move library jar to workspace
          command: mv bazel-bin/src/main/scala/io/iohk/cef/main/main_deploy.jar /tmp/workspace/

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - main_deploy.jar
  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: tests
          command: pwd;ls -R
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Deploy to S3
          command: aws s3 cp /tmp/workspace/main_deploy.jar s3://cef-circle-ci/

  build-enterprise-web:
    working_directory: ~/repo
    docker:
      - image: circleci/node:8-browsers
    steps:
      - checkout
      - restore_cache:
          key: my-project-{{ .Branch }}-{{ checksum "enterprise-web/package-lock.json" }}
      - run: cd enterprise-web && npm install
      - save_cache:
          key: my-project-{{ .Branch }}-{{ checksum "enterprise-web/package-lock.json" }}
          paths:
            - "enterprise-web/node_modules"
      - run: cd enterprise-web && npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      - run: cd enterprise-web && npm run e2e -- --protractor-config=e2e/protractor-ci.conf.js

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
      - build-enterprise-web
