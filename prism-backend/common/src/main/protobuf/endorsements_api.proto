syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.iohk.atala.prism.protos";

package io.iohk.atala.prism.protos;

import "google/protobuf/timestamp.proto";

import "node_models.proto";

service EndorsementsService {
  // requests a fresh master key to be used, and associates its requester to the key
  // - Only keys without an associated DID will be returned
  // - No key will be returned twice
  rpc getFreshMasterKey(GetFreshMasterKeyRequest) returns (GetFreshMasterKeyResponse) {}

  // requests to add en endorsement to a DID
  rpc endorseInstitution(EndorseInstitutionRequest) returns (EndorseInstitutionResponse) {}

  // requests information about the endorsements associated to a DID
  rpc getEndorsements(GetEndorsementsRequest) returns (GetEndorsementsResponse) {}

  // request to remove an existing endorsement
  rpc revokeEndorsement(RevokeEndorsementRequest) returns (RevokeEndorsementResponse) {}
}

message GetFreshMasterKeyRequest {
  string endorserDID = 1;
}
message GetFreshMasterKeyResponse {
  ECKeyData key = 1; // fresh key
  bytes signature = 2; // the signature of the key generated with the MoE key
  string signingKeyId = 3; // the key id of the MoE's key used to sign keys
}

message EndorseInstitutionRequest {
  string parentDID = 1; // DID of the endorser
  string childDID = 2; // DID that will be endorsed
  SignedAtalaOperation issueBatch = 3; // batch containing the endorsement credential
  string credential = 4; // the actual endorsement credential
  string encodedMerkleProof = 5; // the encoded merkle proof of the endorsement credential
}
message EndorseInstitutionResponse {}

message GetEndorsementsRequest {
  string did = 1;
}
message GetEndorsementsResponse {
  repeated ValidityInterval intervals = 1;
}

message ValidityInterval {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
  string credential = 3;
  string encodedMerkleProof = 4;
}

message RevokeEndorsementRequest {
  string parentDID = 1; // the DID of the entity that performs the revocation
  string childDID = 2; // the DID of the institution whose endorsement will be revoked
  SignedAtalaOperation revokeBatch = 3; // the revoke operation that revokes the associated endorsement credential
}
message RevokeEndorsementResponse {}