include "DefaultCredentialTypes/default-credential-types.conf"

db {
  host = "localhost:5432"
  database = "management_console_db"
  username = "postgres"
  password = "postgres"

  host = ${?MANAGEMENT_CONSOLE_PSQL_HOST}
  database = ${?MANAGEMENT_CONSOLE_PSQL_DATABASE}
  username = ${?MANAGEMENT_CONSOLE_PSQL_USERNAME}
  password = ${?MANAGEMENT_CONSOLE_PSQL_PASSWORD}

  awaitConnectionThreads = 8
  awaitConnectionThreads = ${?CONNECTOR_PSQL_AWAIT_CONNECTION_THREADS}

  url = "jdbc:postgresql://"${db.host}"/"${db.database}
}

connector {
  host = "localhost"
  port = "50051"

  // NOTE: did and didPrivateKeyHex are required to invoke the connector, usually we'll generate a new DID per environment
  // unfortunately, we don't have a cli app to do that which makes it very hard.
  //
  // TODO: Avoid hardcoding these values
  //
  // The workaround is to keep these hardcoded until we are able to do so, regenerate them by running this code:
  //    val pair = io.iohk.atala.prism.kotlin.crypto.EC.INSTANCE.generateKeyPair()
  //    val did = io.iohk.atala.prism.kotlin.identity.PrismDid.buildLongFormFromMasterKey(pair.getPublicKey)
  //    println(pair.getPrivateKey.getHexEncoded)
  //    println(did)

  // the DID used to authenticate requests to the connector (usually an unpublished one)
  did = "did:prism:106c458b95e57e16cbbd4b9566a52446c39949fdbd8cd8f876230ff243cf7b5a:Cj8KPRI7CgdtYXN0ZXIwEAFKLgoJc2VjcDI1NmsxEiEDVw1B_oShVvJ11AlVhLYv7OBO9sY9AOz8D5FoWoqI14c"

  // the private key used to sign connector requests (in hex), must belong to the DID
  didPrivateKeyHex = "79af4f2f08f3206a072e080eb7a10f1765b6c16e2c153697ba0e8acf72f9e5b4"

  host = ${?MANAGEMENT_CONSOLE_CONNECTOR_HOST}
  port = ${?MANAGEMENT_CONSOLE_CONNECTOR_PORT}
  did = ${?MANAGEMENT_CONSOLE_CONNECTOR_DID}
  didPrivateKeyHex = ${?MANAGEMENT_CONSOLE_CONNECTOR_DID_PRIVATE_KEY_HEX}
}

node {
  host = "localhost"
  port = "50053"

  host = ${?MANAGEMENT_CONSOLE_NODE_HOST}
  port = ${?MANAGEMENT_CONSOLE_NODE_PORT}
}

##### Third-party config #####

# Set Kamon's Prometheus endpoint to be localhost:9095/metrics
kamon.prometheus {
  embedded-server {
    hostname = 0.0.0.0
    port = "9095"
    port = ${?PROMETHEUS_PORT}
  }
}
kamon.metric.tick-interval = 15 seconds
# Disable akka-http instrumentation as it's not a dependency
kanela.modules.akka-http.enabled=false
