client {
  enabled = true
  # when consul runs in the same machine as nomad, it allows nomad to discover the servers
  # while this is handy, it has caused occassional issues in the initial discovery, adding
  # the servers explicitly should prevent that issue.
  servers = [ {{ nomad_servers_ip_addresses }} ]

  # TODO: Use variable
  host_volume "postgres_node" {
    # TODO: Use variable
    path = "/opt/postgres/node"
    read_only = false
  }

  # In theory, this shouldn't be necessary while using the latest nomad version
  # but, for some reason, an unsupported envoy instance was being used instead.
  meta {
    connect.sidecar_image = "envoyproxy/envoy:v1.18.3"
  }
}

{% if nomad_tls_enabled == true %}
consul {
  address = "127.0.0.1:8501"
  ssl = true
  ca_file = "{{ nomad_config_directory }}/consul-ca.pem"
  cert_file = "{{ nomad_config_directory }}/consul-{{ nomad_mode }}.pem"
  key_file = "{{ nomad_config_directory }}/consul-{{ nomad_mode }}-key.pem"
}
{% endif %}

# necessary to pull from aws ecr
plugin "docker" {
  config {
    auth {
      # Nomad will prepend "docker-credential-" to the helper value and call that script name.
      # Then, docker-credential-ecr-login must be available in the system's $PATH
      helper = "ecr-login"
    }
  }
}

advertise {
  http = "{{ host_public_ipv4_address }}"
  rpc = "{{ host_public_ipv4_address }}"
  serf = "{{ host_public_ipv4_address }}"
}

# uncomment this to enable raw_exec jobs
# plugin "raw_exec" {
#   config {
#     enabled = true
#   }
# }

{% if nomad_telemetry_enabled == true %}
# Metrics
telemetry {
  collection_interval = "1s"
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true
}
{% endif %}

{% if nomad_tls_enabled == true %}
# TLS Required
tls {
  http = true
  rpc = true

  ca_file = "{{ nomad_config_directory }}/nomad-ca.pem"
  cert_file = "{{ nomad_config_directory }}/nomad-client.pem"
  key_file = "{{ nomad_config_directory }}/nomad-client-key.pem"

  verify_server_hostname = true
  verify_https_client = true
  }
{% endif %}
