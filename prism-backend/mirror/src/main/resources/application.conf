grpc {
  port = 50057
}

http {
  pay-id-port = 8080
  pay-id-host-address = "localhost"
}

db {
  host = "localhost:5432"
  database = "atala_mirror_db"
  username = "postgres"
  password = "postgres"

  host = ${?ATALA_MIRROR_PSQL_HOST}
  database = ${?ATALA_MIRROR_PSQL_DATABASE}
  username = ${?ATALA_MIRROR_PSQL_USERNAME}
  password = ${?ATALA_MIRROR_PSQL_PASSWORD}

  awaitConnectionThreads = 8
  awaitConnectionThreads = ${?ATALA_MIRROR_PSQL_AWAIT_CONNECTION_THREADS}

  url = "jdbc:postgresql://"${db.host}"/"${db.database}
}

auth {
  did = ${?ATALA_MIRROR_AUTH_DID}
  did-key-id = ${?ATALA_MIRROR_AUTH_DID_KEY_ID}
  did-private-key = ${?ATALA_MIRROR_AUTH_DID_PRIVATE_KEY}
}

connector {
  host = "localhost"
  port = 50051

  host = ${?ATALA_MIRROR_CONNECTOR_HOST}
  port = ${?ATALA_MIRROR_CONNECTOR_PORT}
}

node {
  host = "localhost"
  port = 50053

  host = ${?ATALA_MIRROR_NODE_HOST}
  port = ${?ATALA_MIRROR_NODE_PORT}
}

trisa {

  enabled = false
  enabled = ${?ATALA_MIRROR_TRISA_ENABLED}

  grpc {
    port = 7777
    port = ${?ATALA_MIRROR_TRISA_GRPC_PORT}
  }

  ssl {
    serverCertificateLocation = "mirror/etc/trisa/server.crt"
    serverCertificatePrivateKeyLocation = "mirror/etc/trisa/server.key"
    serverTrustChainLocation = "mirror/etc/trisa/trust.chain"

    serverCertificateLocation = ${?ATALA_MIRROR_TRISA_SERVER_CERTIFICATE}
    serverCertificatePrivateKeyLocation = ${?ATALA_MIRROR_TRISA_SERVER_CERTIFICATE_PRIVATE_KEY}
    serverTrustChainLocation = ${?ATALA_MIRROR_TRISA_SERVER_TRUST_CHAIN}
  }
}

cardano {
  network = "testnet"
  network = ${?ATALA_MIRROR_CARDANO_NETWORK}

  addressCount = 10
  addressCount = ${?ATALA_MIRROR_CARDANO_ADDRESS_COUNT}
}
