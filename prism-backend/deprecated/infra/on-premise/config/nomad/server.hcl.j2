server {
  enabled = true
  # when consul runs in the same machine as nomad, it allows nomad to discover the servers
  # while this is handy, it has caused occassional issues in the initial discovery, adding
  # the servers explicitly should prevent that issue.
  bootstrap_expect = {{ nomad_expected_servers }}
  server_join {
    retry_join = [ {{ nomad_servers_ip_addresses }} ]
    retry_max = 3
    retry_interval = "15s"
  }

  {% if nomad_gossip_encryption_enabled == true %}
  # Encrypt gossip communication
  encrypt = "{{ encryption.stdout }}"
  {% endif %}
}

{% if nomad_tls_enabled == true %}
consul {
  address = "127.0.0.1:8501"
  ssl = true
  ca_file = "{{ nomad_config_directory }}/consul-ca.pem"
  cert_file = "{{ nomad_config_directory }}/consul-{{ nomad_mode }}.pem"
  key_file = "{{ nomad_config_directory }}/consul-{{ nomad_mode }}-key.pem"
}
{% endif %}

advertise {
  http = "{{ host_public_ipv4_address }}"
  rpc = "{{ host_public_ipv4_address }}"
  serf = "{{ host_public_ipv4_address }}"
}

{% if nomad_telemetry_enabled == true %}
# Metrics
telemetry {
  collection_interval = "1s"
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true
}
{% endif %}

{% if nomad_tls_enabled == true %}
# TLS Required
tls {
  http = true
  rpc = true

  ca_file = "{{ nomad_config_directory }}/nomad-ca.pem"
  cert_file = "{{ nomad_config_directory }}/nomad-server.pem"
  key_file = "{{ nomad_config_directory }}/nomad-server-key.pem"

  verify_server_hostname = true
  verify_https_client = true
  }
{% endif %}
