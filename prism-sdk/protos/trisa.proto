
syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.iohk.atala.mirror.protos";

package trisa.protocol.v1alpha1;

service TrisaPeer2Peer {
  rpc TransactionStream(stream Transaction) returns (stream Transaction) {}
}

message Transaction {
  // The transaction identifier generated by the sender. Any response
  // to a transaction request needs to carry the same identifier.
  string id = 1;

  // Encrypted TransactionData
  bytes transaction = 2;

  // Encryption key used to encrypt the transaction blob. This key itself
  // is encrypted using the public key of the receiver.
  bytes encryption_key = 3;

  // The encryption algorithm used to encrypt the transaction blob.
  string encryption_algorithm = 4;

  // HMAC signature calculated from encrypted transaction blob.
  bytes hmac = 5;

  // The HMAC secret used to calculate the HMAC signature. This secret
  // itself is encrypted using the public key of the receiver.
  bytes hmac_secret = 6;

  // The algorithm used to calculate the HMAC signature.
  string hmac_algorithm = 7;
}

message Any {
  string type_url = 1;

  bytes value = 2;
}

message TransactionData {
  // Identity contains any valid identity structure.
  Any identity = 1;

  // Data contains the network specific data.
  Any data = 2;
}