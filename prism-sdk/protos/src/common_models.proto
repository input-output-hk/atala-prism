syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.iohk.atala.prism.protos";

package io.iohk.atala.prism.protos;

import "google/protobuf/timestamp.proto";

// Request to check the service's health.
message HealthCheckRequest {}
// Response after checking the service's health.
message HealthCheckResponse {}

// Represents a date by its parts (day, month, year). This avoids date formatting issues in different languages.
message Date {
    int32 year = 1; // A positive value.
    int32 month = 2; // A value in the [1, 12] range.
    int32 day = 3; // A value in the [1, 31] range (depending on the month, the maximum value might be 28).
}

// Represents a time interval between two given timestamps.
message TimeInterval {
    // The starting inclusive timestamp
    // cannot be missing (i.e., the interval cannot be open-ended).
    // startTimestamp must be before or equal to endTimestamp.
    google.protobuf.Timestamp startTimestamp = 1;
    // The ending inclusive timestamp
    // cannot be missing (i.e., the interval cannot be open-ended).
    // endTimestamp must be after or equal to endTimestamp.
    google.protobuf.Timestamp endTimestamp = 2;
}

// Specifies the direction in which to sort results.
enum SortByDirection {
    SORT_BY_DIRECTION_UNKNOWN = 0; // Nothing provided, each API can define whether to fail or take a default value (commonly ASCENDING).
    SORT_BY_DIRECTION_ASCENDING = 1; // Sort the results in ascending order.
    SORT_BY_DIRECTION_DESCENDING = 2; // Sort the results in descending order.
}

// The supported ledger types, commonly used for linking on-chain transactions.
enum Ledger {
    reserved 2; // Removed BITCOIN_TESTNET
    reserved "BITCOIN_TESTNET";
    reserved 3; // Removed BITCOIN_MAINNET
    reserved "BITCOIN_MAINNET";

    UNKNOWN_LEDGER = 0; // Invalid default value.
    IN_MEMORY = 1; // This is used only for development.
    CARDANO_TESTNET = 4; // Cardano testnet (used for testing).
    CARDANO_MAINNET = 5; // Cardano mainnet, used in production.
}

// Information about a ledger block.
message BlockInfo {
    reserved 2; // Removed timestamp_deprecated field
    reserved "timestamp_deprecated";

    int32 number = 1; // Number of the block in the ledger.
    int32 index = 3; // Index of the transaction within the block.
    google.protobuf.Timestamp timestamp = 4; // Timestamp when the block was created.
}

// Information about a ledger transaction and the block that the transaction is included in.
message TransactionInfo {
    string transactionId = 1; // Transaction ID.
    Ledger ledger = 2; // Ledger the transaction was published to.
    BlockInfo block = 3; // Block the transaction was included in.
}

// The status of a PRISM transaction.
enum TransactionStatus {
    UNKNOWN = 0; // The transaction is not an Atala PRISM transaction.
    PENDING = 1; // The transaction is pending to be accepted by the blockchain.
    IN_LEDGER = 2; // The transaction has been accepted by the blockchain, but is pending confirmation from Atala PRISM.
    CONFIRMED = 3; // The transaction has been confirmed by Atala PRISM and is now considered immutable.
}
